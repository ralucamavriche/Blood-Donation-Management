{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","actions/donorActions.js","components/shared/Breadcrum/BreadcrumsModel.jsx","components/donor/DonorModal.js","components/shared/Spinner.jsx","components/shared/Alert/Alert.jsx","components/donor/DonorsList.js","Screens/Donors.js","components/auth/LoginModal.js","components/auth/RegisterModal.js","components/auth/Logout.js","actions/requestActions.js","components/Notification.js","components/BloodRequestModal.js","components/Navbar.js","components/Footer.js","components/donor/History.jsx","components/donor/TimelineDonor.jsx","components/donor/EditDonorModal.js","Screens/EditDonoars.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/donorReducer.js","reducers/requestReducer.js","reducers/mainReducer.js","reducers/index.js","store.js","components/shared/CardModel/NotificationCardModel.jsx","Screens/NotificationsPage.jsx","components/shared/CommentSection/CommentCard.jsx","components/shared/CommentSection/CommentSection.jsx","Screens/ViewNotification.jsx","components/feedback/FeedbackModal.jsx","actions/mainActions.js","components/question/QuestionModal.jsx","components/shared/PageOptions/PageOptions.jsx","components/Dashboard.jsx","components/DashboardComponents/ConfirmModal.jsx","components/DashboardComponents/MainDashboard.jsx","components/DashboardComponents/MedicalHistory.jsx","components/HomePage.jsx","components/Main.jsx","components/AppointmentModal.jsx","components/DashboardComponents/MyAppointments.jsx","components/DashboardComponents/Questions.jsx","components/DashboardComponents/MainPage.jsx","components/DashboardComponents/Settings.jsx","App.js","serviceWorker.js","index.js"],"names":["returnAlert","text","style","dispatch","type","payload","window","setTimeout","clearErrors","register","history","name","email","password","role","body","JSON","stringify","linkTo","location","axios","post","headers","then","res","data","status","catch","err","console","log","push","tokenConfig","getState","token","auth","config","id","getDonors","setDonorsLoding","get","response","BreadcrumsModel","props","aria-label","className","options","map","option","index","key","to","aria-current","currentLink","DonorModal","state","modal","age","weight","phone_number","cnp","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newDonor","currentUser","user","_id","addDonor","readyForAccount","handleSet","this","isAuthenticated","Button","color","marginBottom","onClick","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","htmlFor","Input","required","input","placeholder","for","min","marginTop","block","Component","withRouter","connect","donor","errors","alert","Spinner","optionsAlert","success","warning","info","danger","Alert","optionAlert","data-dismiss","aria-hidden","handleClose","DonorsList","onDeleteClick","deleteDonor","forceUpdate","donors","loading","ListGroup","ListGroupItem","createdBy","size","event","bind","main","isOpenAlert","closeAlert","delete","Donors","LoginModal","msg","login","prevProps","error","NavLink","href","pathname","localStorage","setItem","RegisterModal","newUser","Logout","logout","updateViewField","id_notification","viewedBy","patch","getRequests","Notification","handleClickNotifications","user_id","includes","viewedByTemp","countOfNotificationsState","requests","request","countOfNotifications","notifications","checkNewStuff","data-toggle","aria-haspopup","aria-expanded","icon","faBell","float","aria-labelledby","margin","width","title","date","CSSTransition","timeout","classNames","fromNow","length","BloodRequest","author","description","blood_type","newRequest","addRequest","Navbar","authLinks","charAt","toUpperCase","slice","guestLink","NavItem","NavbarToggler","data-target","aria-controls","Collapse","navbar","Nav","Footer","History","url","specifications","newHistory","handleSubmitHistory","Container","Row","Card","CardHeader","CardBody","TimelineDonor","historyData","EditDonor","updateDonorInfo","match","params","currentDonor","currentHistory","handleInputChange","changeCurrentDonorInfo","routeChange","firstTime","getCurrentDonorById","paddingTop","paddingBottom","outline","EditDonors","initialState","isLoading","isSuccessUpdate","appointments","feedbacks","questions","combineReducers","action","removeItem","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","Date","padding","NotificationsPage","CommentCard","authorTemp","src","alt","height","CommentSection","background","comments","ViewNotification","comment","author_id","addComment","notification","marginLeft","marginRight","borderRadius","opacity","maxWidth","FeedbackModal","rating","typeOfFeedback","addFeedback","rows","getFeedbacks","QuestionModal","question","newQuestion","addQuestion","feedback","useState","setIsOpen","isOpenQuestion","setIsOpenQustion","x-placement","Dashboard","isHide","active","children","ConfirmModal","handleAnswer","MainDashboard","toggleConfirm","isOpenConfirm","handleSendApp","handleStatus","idDonor","a","updateAppointment","getAppointment","answer","questionConfirm","updateFeedback","idAppointment","filterData","searchText","toLowerCase","checkboxPending","checkboxAccepted","checkboxDenied","aria-describedby","checked","scope","id_app","_","don","faUserCircle","faLaptopCode","faMapMarked","faHeart","faPhone","faEnvelope","Main","isLoadedState","AppointmentModal","addAppointment","MyAppointments","nameOfDonor","emailOfDonor","dateOfDonor","toString","handleAppointmentsView","ok","showAddBtn","format","hospitalName","appointmentDate","message","messageAccept","details","messageDenied","Questions","getQuestions","updateQuestions","idQuestion","handleResponseAnswer","currentTarget","textContent","contentEditable","onInput","MainPage","rel","Settings","hanldeChange","handleSubmitDetails","updateUser","phone","address","handlePasswordChange","newPassword","newPassword2","updateUserPassword","currentPassword","minLength","pattern","App","getItem","clear","idUser","jwt","exact","path","component","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdf34fcd.chunk.js","sourcesContent":["import {  CLEAR_ERRORS,OPEN_ALERT,CLOSE_ALERT } from \"./types\";\r\n\r\nexport const returnAlert = (text, style) => dispatch => {\r\n    dispatch({\r\n        type: OPEN_ALERT,\r\n        payload: {\r\n          text: text,\r\n          style: style,\r\n        },\r\n      });\r\n      window.setTimeout(() => {\r\n        dispatch({\r\n          type: CLOSE_ALERT,\r\n          payload: { text: \"\" },\r\n        });\r\n      }, 3000);\r\n}\r\n//RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => dispatch =>{\r\n    dispatch({\r\n        type: OPEN_ALERT,\r\n        payload: {\r\n          text: `[${status}] : ${msg}`,\r\n          style: \"danger\",\r\n        },\r\n      });\r\n      window.setTimeout(() => {\r\n        dispatch({\r\n          type: CLOSE_ALERT,\r\n          payload: { text: \"\" },\r\n        });\r\n      }, 3000);\r\n    return null;\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n","export const USER_LOADED=\"USER_LOADED\";\r\nexport const USER_LOADING=\"USER_LOADING\";\r\nexport const AUTH_ERROR=\"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS=\"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL=\"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS=\"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS=\"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL=\"REGISTER_FAIL\";\r\nexport const GET_ERRORS=\"GET_ERRORS\";\r\nexport const CLEAR_ERRORS=\"CLEAR_ERRORS\";\r\n\r\nexport const GET_DONORS = 'GET_DONORS';\r\nexport const ADD_DONORS= 'ADD_DONORS';\r\nexport const DELETE_DONORS = 'DELETE_DONORS';\r\nexport const EDIT_DONOR = 'EDIT_DONOR';\r\nexport const DONORS_LOADING = 'DONORS_LOADING';\r\nexport const SET_CURRENT_DONOR = 'SET_CURRENT_DONOR';\r\nexport const CHANGE_CURRENT_DONOR_INFO = 'CHANGE_CURRENT_DONOR_INFO';\r\n\r\nexport const GET_REQUESTS = 'GET_REQUESTS';\r\nexport const GET_APPOINTMENTS = 'GET_APPOINTMENTS';\r\nexport const ADD_REQUESTS= 'ADD_REQUESTS';\r\nexport const ADD_COMMENT= 'ADD_COMMENT';\r\n\r\nexport const GET_FEEDBACKS= 'GET_FEEDBACKS';\r\nexport const OPEN_ALERT= 'OPEN_ALERT';\r\nexport const CLOSE_ALERT= 'CLOSE_ALERT';\r\n\r\nexport const GET_QUESTIONS= 'GET_QUESTIONS';\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { returnAlert } from \"./errorActions\";\r\nimport jwt from \"jwt-decode\";\r\n// import { mainAPI } from '../config';\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from \"./types\";\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // User loading\r\n  dispatch({ type: USER_LOADING });\r\n  // localStorage.clear()\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token === null || token === \"undefind\" || token.length < 20) {\r\n    localStorage.clear();\r\n  } else {\r\n    const idUser = token && jwt(token)._id;\r\n    token &&\r\n      axios\r\n        .get(`/api/auth/user/${idUser}`, tokenConfig(getState))\r\n        .then((res) => {\r\n          if (res.data.status === \"failed\") {\r\n            dispatch(returnAlert(\"Error at load user!\", \"danger\"));\r\n          } else\r\n            return dispatch({\r\n              type: USER_LOADED,\r\n              payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            returnAlert(\r\n              `[${err.response.status}] : ${\r\n                err.response.data + \": Error load User\"\r\n              }`,\r\n              \"danger\"\r\n            )\r\n          );\r\n        });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password, role }, history) => (\r\n  dispatch\r\n) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ name, email, password, role });\r\n\r\n  const linkTo = window.location;\r\n\r\n  axios\r\n    .post(\"/api/users\", body, config)\r\n    .then((res) => {\r\n      axios\r\n        .post(\"/api/email\", { name, email, linkTo })\r\n        .then((res) => {\r\n          if (res.data.status !== \"failed\")\r\n            return dispatch(returnAlert(\"Email sent Successfully!\", \"info\"));\r\n          else return dispatch(returnAlert(\"Email not sent!\", \"danger\"));\r\n        })\r\n        .catch((err) => {\r\n          // return dispatch(\r\n          //   returnAlert(\r\n          //     `[${err.response.status}] : ${\r\n          //       err.response.data + \": Email not sent!\"\r\n          //     }`,\r\n          //     \"danger\"\r\n          //   )\r\n          // );\r\n      return console.log('Email not sent!');\r\n        });\r\n      if (role !== \"donor\") {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n        dispatch(returnAlert(\"Account created Successfully\", \"success\"));\r\n      }\r\n      if (history !== null) return history.push(\"/login\");\r\n      else return null;\r\n    })\r\n    .catch((err) => {\r\n      if(role === 'donor'){\r\n      console.log('Email already exist')\r\n      }else{\r\n        dispatch(\r\n          returnAlert(\"Email or password  already exist\",\r\n            \"danger\"\r\n          )\r\n        );\r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n        });\r\n      }\r\n      \r\n    });\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post(\"/api/auth\", body, config)\r\n    .then((res) => {\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": Error Register User\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = (getState) => {\r\n  //Get token from localstorage\r\n  const token = getState().auth.token;\r\n\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    id: \"application/json\",\r\n    body: {\r\n      id: \"5ec3c784b54a553d948ff5a2\",\r\n    },\r\n  };\r\n\r\n  //If token, add to header\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_DONORS,\r\n  DELETE_DONORS,\r\n  DONORS_LOADING,\r\n  SET_CURRENT_DONOR,\r\n  CHANGE_CURRENT_DONOR_INFO,\r\n} from \"./types\";\r\nimport { tokenConfig } from \"./authActions\";\r\nimport { returnAlert } from \"./errorActions\";\r\n// import { mainAPI } from '../config';\r\n\r\nexport const getDonors = () => (dispatch) => {\r\n  dispatch(setDonorsLoding());\r\n  axios\r\n    .get(\"/api/donors\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_DONORS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": :Donors GET Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const changeCurrentDonorInfo = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: CHANGE_CURRENT_DONOR_INFO,\r\n    payload,\r\n  });\r\n};\r\nexport const updateDonorInfo = (id, currentDonor) => (dispatch) => {\r\n  axios\r\n    .patch(`/api/donors/${id}`, currentDonor)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CHANGE_CURRENT_DONOR_INFO,\r\n        payload: { name: \"isSuccessUpdate\", value: true },\r\n      });\r\n      window.setTimeout(() => {\r\n        dispatch({\r\n          type: CHANGE_CURRENT_DONOR_INFO,\r\n          payload: { name: \"isSuccessUpdate\", value: false },\r\n        });\r\n      }, 2000);\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \":Donor Update  Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const getCurrentDonorById = (id) => (dispatch) => {\r\n  axios\r\n    .get(`/api/donors/${id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_CURRENT_DONOR,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \":GET Donor by ID Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const addDonor = (donor) => (dispatch, getState) => {\r\n  axios\r\n    .post(\"/api/donors\", donor, tokenConfig(getState))\r\n    .then((res) => {\r\n      if (res.data.errors) {\r\n        alert(\"Donor Failed : Actions Redux\");\r\n      } else {\r\n        dispatch(returnAlert(\"Donor added Successfully\", \"success\"));\r\n        return getDonors();\r\n      }\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${err.response.data + \": :Donor Failed\"}`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const deleteDonor = (id) => (dispatch, getState) => {\r\n  axios\r\n    .delete(`/api/donors/${id}`, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Donor deleted Successfully\", \"success\"));\r\n      return dispatch({\r\n        type: DELETE_DONORS,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${err.response.data + \": :Donor Failed\"}`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const setDonorsLoding = () => {\r\n  return {\r\n    type: DONORS_LOADING,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nexport default function BreadcrumsModel(props) {\r\n  return (\r\n    <>\r\n  \r\n  \r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          {props.options.map((option,index) => {\r\n            return (\r\n              <li key={index} className=\"breadcrumb-item\">\r\n                <Link to={option.to}>{option.name}</Link>\r\n              </li>\r\n            );\r\n          })}\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {props.currentLink}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addDonor,getDonors } from '../../actions/donorActions';\r\nimport {register} from '../../actions/authActions'\r\nimport PropTypes from 'prop-types';\r\nimport BreadcrumsModel from './../shared/Breadcrum/BreadcrumsModel';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass DonorModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        // email: (''+Math.random()).substr(2)+'blondi@yahoo.com',\r\n        email: '',\r\n        age: '',\r\n        weight: '',\r\n        phone_number: '',\r\n        cnp:''\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newDonor = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            age: this.state.age,\r\n            weight: this.state.weight,\r\n            phone_number: this.state.phone_number,\r\n            currentUser: this.props.auth.user._id,\r\n            cnp:this.state.cnp\r\n        }\r\n\r\n        const tempPass = 'name-123';\r\n        this.props.addDonor(newDonor);\r\n        const readyForAccount = {...newDonor,password:tempPass,role:'donor'};\r\n        this.props.register(readyForAccount,null); \r\n        this.setState({\r\n            modal: false,\r\n        name: '',\r\n        email: '',\r\n        age: '',\r\n        weight: '',\r\n        phone_number: '',\r\n        cnp:''\r\n        })\r\n        this.props.handleSet(newDonor)\r\n        \r\n        //Close modal\r\n        this.toggle();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BreadcrumsModel\r\n          options={[{ to: \"/\", name: \"Blood D\" }]}\r\n          currentLink=\"Donors List\"\r\n        />\r\n                \r\n                {this.props.isAuthenticated ? (\r\n                    <Button\r\n                        color=\"dark\"\r\n                        style={{ marginBottom: '2rem' }}\r\n                        onClick={this.toggle}\r\n                    ><i className=\"fas fa-plus-circle\"></i> Add Donor\r\n                    </Button>\r\n                ) : (\r\n                        <h5\r\n                            className=\"mb-3 ml-4 text-center\"\r\n                            style={{ marginBottom: '2rem' }}> Please log in to manage donors</h5>\r\n                    )}\r\n                \r\n                \r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}>Add To Donor List</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <h4>Will create an account for the donor.</h4>\r\n                                <Label htmlFor=\"donor\">Donor</Label>\r\n                                <Input\r\n                                    required\r\n                                    input=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"donor\"\r\n                                    value={this.state.name}\r\n                                    placeholder=\"Add Name donor\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for='email'>Email</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={this.state.email}\r\n                                    placeholder=\"Add Email\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for='age'>Age</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"number\"\r\n                                    name=\"age\"\r\n                                    min={18}\r\n                                    id=\"age\"\r\n                                    value={this.state.age}\r\n                                    placeholder=\"Add Age\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for='weight'>Weight</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    min={50}\r\n                                    id=\"weight\"\r\n                                    value={this.state.weight}\r\n                                    placeholder=\"Add weight\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for='phone_number'>Phone number</Label>\r\n                                <Input\r\n                                    required\r\n                                    input=\"number\"\r\n                                    name=\"phone_number\"\r\n                                    min={10}\r\n                                    id=\"phone_number\"\r\n                                    value={this.state.phone_number}\r\n                                    placeholder=\"Add Phone Number\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for='phone_number'>CNP</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"number\"\r\n                                    name=\"cnp\"\r\n                                    min={13}\r\n                                    id=\"cnp\"\r\n                                    value={this.state.cnp || ''}\r\n                                    placeholder=\"Add CNP\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Button\r\n                                    color=\"dark\"\r\n                                    style={{ marginTop: '2rem' }}\r\n                                    block >Add donor\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    donor: state.donor,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { addDonor,getDonors,register })(DonorModal));","import React, { Component } from \"react\";\r\n\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"p-5 d-flex justify-content-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nconst optionsAlert = {\r\n  success:{\r\n    className:'alert alert-success alert-dismissable',\r\n    type:'Well done!'\r\n  },\r\n  warning:{\r\n    className:'alert alert-warning alert-dismissable',\r\n    type:'Warning!'\r\n  },\r\n  info:{\r\n    className:'alert alert-info alert-dismissable',\r\n    type:'Warning!'\r\n  },\r\n  danger:{\r\n    className:'alert alert-danger alert-dismissable',\r\n    type:'Oh snap!'\r\n  },\r\n\r\n}\r\nexport default function Alert(props) {\r\n  const optionAlert = optionsAlert[props.style] \r\n  return props.text ? (\r\n    <>\r\n          <div className=\"alert-group customAlertFixed\">\r\n            <div className={optionAlert.className}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-hidden=\"true\"\r\n                onClick={props.handleClose}\r\n              >\r\n                ×\r\n              </button>\r\n              <strong>{optionAlert.type}</strong> {props.text || \"\"}\r\n            </div>\r\n          </div>\r\n    </>\r\n  ) : null;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDonors, deleteDonor } from \"../../actions/donorActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport DonorModal from \"./DonorModal\";\r\nimport Spinner from \"./../shared/Spinner\";\r\nimport Alert from \"./../shared/Alert/Alert\";\r\n\r\nclass DonorsList extends Component {\r\n  static propTypes = {\r\n    getDonors: PropTypes.func.isRequired,\r\n    donor: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getDonors();\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteDonor(id);\r\n  };\r\n\r\n  handleSet = (newDonor) => {\r\n    this.props.getDonors();\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    const { donors, loading } = this.props.donor;\r\n    const { user } = this.props.auth;\r\n    if (loading === true) return <Spinner />;\r\n    else\r\n      return (\r\n        <>\r\n          <DonorModal handleSet={this.handleSet} />\r\n          <ListGroup>\r\n            <ListGroupItem>\r\n              <h2 className=\"text-center\"> Donors List</h2>\r\n            </ListGroupItem>\r\n            {user &&\r\n              donors.map(({ _id, name, createdBy }) => {\r\n                if (user._id === createdBy)\r\n                  return (\r\n                    <ListGroupItem>\r\n                      <>\r\n                        {this.props.isAuthenticated && (\r\n                          <div>\r\n                            <Button\r\n                              className=\"edit-btn float-right\"\r\n                              color=\"success\"\r\n                              size=\"sm\"\r\n                              onClick={(event) =>\r\n                                this.props.history.push(`/donors/edit/${_id}`)\r\n                              }\r\n                            >\r\n                              Edit\r\n                            </Button>\r\n\r\n                            <Button\r\n                              className=\"remove-btn float-right\"\r\n                              color=\"danger\"\r\n                              size=\"sm\"\r\n                              onClick={this.onDeleteClick.bind(this, _id)}\r\n                            >\r\n                              {\" \"}\r\n                              Remove \r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n                        {name}\r\n                      </>\r\n                    </ListGroupItem>\r\n                  );\r\n                  return null;\r\n              })}\r\n          </ListGroup>\r\n          {this.props.main.isOpenAlert === true && (\r\n            <Alert\r\n              text={this.props.main.text}\r\n              style={this.props.main.style}\r\n              handleClose={this.props.closeAlert}\r\n            />\r\n          )}\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  donor: state.donor,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  main: state.main,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getDonors, deleteDonor })(DonorsList)\r\n);\r\n","import React, { Component } from 'react';\r\nimport DonorsList from '../components/donor/DonorsList';\r\n\r\nclass Donors extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"Donors\">\r\n        <div className=\"donorsList\">\r\n          <DonorsList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Donors;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n\r\n    // Attempt to login\r\n    this.props.login(user);\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n    this.props.history.push('/')\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal || window.location.pathname==='/login'} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='email'>Email</Label>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  value={this.state.password}\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  { login, clearErrors }\r\n)(LoginModal));","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass RegisterModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n\r\n    };\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        register: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    };\r\n\r\n        componentDidUpdate(prevProps) {\r\n            const { error, isAuthenticated } = this.props;\r\n            if (error !== prevProps.error) {\r\n                // Check for register error\r\n                if (error.id === 'REGISTER_FAIL') {\r\n                    this.setState({ msg: error.msg.msg });\r\n                } else {\r\n                    this.setState({ msg: null });\r\n                }\r\n            }\r\n\r\n            // If authentificated, close modal\r\n            if (this.state.modal) {\r\n                if (isAuthenticated) {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n\r\n    toggle = () => {\r\n        //Clear errors\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, password } = this.state;\r\n\r\n        //Create user object\r\n        const newUser = {\r\n            name,\r\n            email,\r\n            password\r\n        };\r\n\r\n        //Attempt to register\r\n        this.props.register(newUser,this.props.history); \r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavLink onClick={this.toggle} href=\"#\">\r\n                    Register\r\n                </NavLink>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.msg ? (\r\n                            <Alert color=\"danger\"> {this.state.msg} </Alert>\r\n                        ) : null}\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label for='name'>Name</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='name'\r\n                                    id='name'\r\n                                    placeholder='Name'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n\r\n                                <Label for='email'>Email</Label>\r\n                                <Input\r\n                                    type='email'\r\n                                    name='email'\r\n                                    id='email'\r\n                                    placeholder='Email'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n\r\n                                <Label for='password'>Password</Label>\r\n                                <Input\r\n                                    type='password'\r\n                                    name='password'\r\n                                    id='password'\r\n                                    placeholder='Password'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Button\r\n                                    color='dark'\r\n                                    style={{ marginTop: '2rem' }}\r\n                                    block >Register\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { register, clearErrors })(RegisterModal));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\nexport class Logout extends Component {\r\n\r\n    static propTypes = {\r\n        logout: PropTypes.func.isRequired\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Link className=\"dropdown-item\"onClick={this.props.logout} to=\"/\"><i className=\"fas fa-sign-out-alt\"></i> Logout</Link>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { logout })\r\n(Logout);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_REQUESTS,\r\n  ADD_REQUESTS,\r\n  GET_APPOINTMENTS,\r\n} from \"./types\";\r\nimport { returnAlert } from \"./errorActions\";\r\n// import { mainAPI } from '../config';\r\n\r\nexport const updateViewField = (id_notification, viewedBy) => (dispatch) => {\r\n  axios\r\n    .patch(`/api/request/${id_notification}`, { viewedBy })\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Notification Viewed\", \"success\"));\r\n      return null;\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :Update Notification Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\nexport const updateAppointment = (id_app, status,name='Gliga Dumitru',email='gliga_dumitru@yahoo.com',linkTo='',hospitalName='Hospital Nr.5', appointmentDate='12.12.202 12:15AM') => (dispatch) => {\r\n  axios\r\n    .patch(`/api/appointment/${id_app}`, { status })\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Appointment Updated Successfully\", \"success\"));\r\n      let message = {}\r\n      const messageAccept = {\r\n        title:'Thank you for your appointment!',\r\n        details:`The donation center: ${hospitalName}, is waiting for you on ${appointmentDate}. Take care of you!`\r\n      }\r\n      const messageDenied = {\r\n        title:'About your appointment!',\r\n        details:`The donation center: ${hospitalName}, has canceled your appointment. Please make another appointment!`\r\n      }\r\n      message = status === 'Accepted' ? messageAccept : messageDenied\r\n      axios\r\n        .post(\"/api/email\", { name, email, linkTo,title:message.title,details:message.details })\r\n        .then((res) => {\r\n          if (res.data.status !== \"failed\")\r\n            return dispatch(returnAlert(\"Email sent Successfully!\", \"info\"));\r\n            else return dispatch(returnAlert(\"Email not sent!\", \"danger\"));\r\n        })\r\n        .catch((err) => {\r\n          // return dispatch(\r\n          //   returnAlert(\r\n          //     `[${err.response.status}] : ${\r\n          //       err.response.data + \": Error load User\"\r\n          //     }`,\r\n          //     \"danger\"\r\n          //   )\r\n          // );\r\n          return console.log('email not send')\r\n        });\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :Update Appointment Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\nexport const getRequests = () => (dispatch) => {\r\n  axios\r\n    .get(\"/api/request\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_REQUESTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :GET Request Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\n\r\nexport const getAppointment = () => (dispatch) => {\r\n  axios\r\n    .get(\"/api/appointment\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_APPOINTMENTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :GET  Appointments Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\nexport const addRequest = (request) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/request\", request)\r\n    .then((res) => {\r\n      if (res.data.errors) {\r\n\r\n        // alert('Avem errori addrequest')\r\n        dispatch(returnAlert(\"Input invalid.Incercati din nou.\", \"danger\"));\r\n      } else {\r\n        dispatch(returnAlert(\"Notification Added Successfully\", \"success\"));\r\n        return dispatch({\r\n          type: ADD_REQUESTS,\r\n          payload: res.data,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :Add Notification Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\nexport const addAppointment = (request) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/appointment\", request)\r\n    .then((res) => {\r\n      if (res.data.errors) {\r\n        return console.log(res.data);\r\n      } else {\r\n        dispatch(returnAlert(\"Add Appointment Successfully\", \"success\"));\r\n      }\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :Add Appointment Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\n\r\nexport const addComment = (id, comments) => (dispatch) => {\r\n  return axios\r\n    .patch(`/api/request/${id}`, { comments })\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Add Comment Successfully\", \"success\"));\r\n    })\r\n    .catch((err) =>\r\n    dispatch(\r\n      returnAlert(\r\n        `[${err.response.status}] : ${\r\n          err.response.data + \": :Add Comment Failed\"\r\n        }`,\r\n        \"danger\"\r\n      )\r\n    )\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getRequests } from \"../actions/requestActions\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateViewField } from \"../actions/requestActions\";\r\nconst checkNewStuff = (notifications, user_id) => {\r\n  let res = 0;\r\n  notifications &&\r\n    notifications.map(({ viewedBy }) => {\r\n      if (viewedBy.includes(user_id) === false) res++;\r\n      return null;\r\n    });\r\n\r\n  return res;\r\n};\r\nclass Notification extends Component {\r\n  static propTypes = {\r\n    getRequests: PropTypes.func.isRequired,\r\n    request: PropTypes.object.isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      countOfNotificationsState: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRequests();\r\n  }\r\n\r\n  handleClickNotifications = (e, _id, viewedBy) => {\r\n    const user_id = this.props.auth.user._id;\r\n    if (viewedBy.includes(user_id) === false) {\r\n      let viewedByTemp = viewedBy;\r\n      viewedByTemp.push(user_id);\r\n      this.props.updateViewField(_id, viewedByTemp);\r\n    }\r\n    this.props.history.push(`/notifications/${_id}`);\r\n  };\r\n  render() {\r\n    const { requests } = this.props.request;\r\n    const { user } = this.props.auth;\r\n    const countOfNotifications = user !== null ?checkNewStuff(requests, user._id) : 0;\r\n    if(this.props.auth.user !==null)\r\n    return (\r\n      <>\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            to=\"#\"\r\n            id=\"navbarDropdown\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"false\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faBell}\r\n              size=\"1x\"\r\n              float=\"left\"\r\n              color=\"white\"\r\n            />\r\n          </Link>\r\n\r\n          {countOfNotifications > 0 && (\r\n            <span className=\"badge badge-danger\">{countOfNotifications}</span>\r\n          )}\r\n\r\n          <ul\r\n            role=\"menu\"\r\n            className=\"dropdown-menu dropdown-menu-left pull-right\"\r\n            aria-labelledby=\"navbarDropdown\"\r\n          >\r\n            <li role=\"none\">\r\n              <Link to=\"/notifications\" className=\"dropdown-menu-header\">\r\n                Notifications\r\n              </Link>\r\n            </li>\r\n            <ul\r\n              className=\"timeline timeline-icons timeline-sm\"\r\n              style={{ margin: \"10px\", width: \"210px\" }}\r\n            >\r\n              {requests.map(\r\n                ({ _id, title, date, viewedBy }, index) =>\r\n                  viewedBy &&\r\n                  viewedBy.includes(user._id) === false && (\r\n                    <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                      <li\r\n                        onClick={(e) =>\r\n                          this.handleClickNotifications(e, _id, viewedBy)\r\n                        }\r\n                        className=\"custom_notfication_link\"\r\n                      >\r\n                        <p>\r\n                          <span className=\"custom_title\">\r\n                            {title}\r\n                            {viewedBy &&\r\n                              viewedBy.includes(user._id) === false && (\r\n                                <span className=\"  badge badge-secondary custom_bagde\">\r\n                                  New\r\n                                </span>\r\n                              )}\r\n                          </span>\r\n                          <span className=\"timeline-icon\">\r\n                            <i className=\"far fa-bell\"></i>\r\n                          </span>\r\n                          <span className=\"timeline-date\">\r\n                          <Moment fromNow>{date}</Moment>\r\n                            </span>\r\n                        </p>\r\n                      </li>\r\n                    </CSSTransition>\r\n                  )\r\n              )}\r\n              {requests.length >= 3 && (\r\n                <li\r\n                  onClick={() => this.props.history.push(`/notifications`)}\r\n                  className=\"custom_notfication_link\"\r\n                >\r\n                  <p>\r\n                    <span className=\"custom_title\">\r\n                      {\" \"}\r\n                      View all {requests.length} notifications!\r\n                    </span>\r\n                    <span className=\"timeline-icon\">\r\n                      <i className=\"far fa-bell\"></i>\r\n                    </span>\r\n                    <span className=\"timeline-date\"></span>\r\n                  </p>\r\n                </li>\r\n              )}\r\n            </ul>\r\n            <li role=\"none\">\r\n              <Link to=\"#\" className=\"dropdown-menu-header\"></Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </>\r\n    );\r\n    else return null\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  request: state.request,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getRequests, updateViewField })(Notification)\r\n);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addRequest } from '../actions/requestActions';\r\n\r\nclass BloodRequest extends Component {\r\n    state = {\r\n        modal: false,\r\n        title: '',\r\n        author:'',\r\n        description: '',\r\n        blood_type: ''\r\n\r\n    };\r\n\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Create reques object\r\n        const newRequest = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            description: this.state.description,\r\n            blood_type: this.state.blood_type\r\n        };\r\n\r\n        //Add request via addRequest action\r\n        this.props.addRequest(newRequest); \r\n        \r\n        //Close modal\r\n        this.toggle();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <span className=\"blondi\" onClick={this.toggle} >\r\n                    Request\r\n                </span>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Request</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label for='title'>Title</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='title'\r\n                                    id='title'\r\n                                    value={this.state.title}\r\n                                    placeholder='Title'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n\r\n                                <Label for='author'>Author</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='author'\r\n                                    id='author'\r\n                                    value={this.state.author}\r\n                                    placeholder='Author'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n\r\n                                <Label for='description'>Description</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='description'\r\n                                    id='description'\r\n                                    value={this.state.description}\r\n                                    placeholder='Description'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for='blood_type'>Blood type </Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='blood_type'\r\n                                    id='blood_type'\r\n                                    value={this.state.type}\r\n                                    placeholder='Blood type'\r\n                                    className='mb-3'\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Button\r\n                                    color='dark'\r\n                                    style={{ marginTop: '2rem' }}\r\n                                    block >Send\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    request: state.request\r\n});\r\n\r\nexport default connect(mapStateToProps, { addRequest })(BloodRequest);","import React, { Component, Fragment } from \"react\";\r\nimport { Collapse, Nav, NavItem, NavbarToggler } from \"reactstrap\";\r\nimport LoginModal from \"./auth/LoginModal\";\r\nimport RegisterModal from \"./auth/RegisterModal\";\r\nimport Logout from \"./auth/Logout\";\r\nimport Notification from \"./Notification\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport BloodRequest from \"./BloodRequestModal\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <Fragment>\r\n        {this.props.auth.user  && (this.props.auth.user.role === \"admin\" && (\r\n          <li className=\"nav-item\">\r\n            <Link to=\"#\" className=\"nav-link js-scroll-trigger\">\r\n              <BloodRequest />\r\n            </Link>\r\n          </li>\r\n        ))}\r\n        {\r\n          this.props.auth.user !== null &&  <Notification />\r\n        }\r\n       \r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            to=\"#\"\r\n            id=\"navbarDropdown\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {user\r\n              ? `Welcome ${\r\n                  user.name.charAt(0).toUpperCase() + user.name.slice(1)\r\n                }`\r\n              : \"\"}\r\n          </Link>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <Link className=\"dropdown-item\" to=\"/dashboard/settings\">\r\n              <i className=\"fas fa-sliders-h\"></i> Settings\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle\"></i> Dashboard\r\n            </Link>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <Logout />\r\n          </div>\r\n        </li>\r\n      </Fragment>\r\n    );\r\n\r\n    const guestLink = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <RegisterModal />\r\n        </NavItem>\r\n        <NavItem>\r\n          <LoginModal />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-light fixed-top py-2\"\r\n          id=\"mainNav\"\r\n        >\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand js-scroll-trigger\" to=\"/\">\r\n              Blood Donation\r\n            </Link>\r\n            <NavbarToggler\r\n              className=\"navbar-toggler navbar-toggler-right\"\r\n              onClick={this.toggle}\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarResponsive\"\r\n              aria-controls=\"navbarResponsive\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </NavbarToggler>\r\n            <Collapse isOpen={this.state.isOpen} className=\"somesome\" navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <li className=\"nav-item\">\r\n                  <a\r\n                    className=\"nav-link js-scroll-trigger\"\r\n                    href=\"/#about\"\r\n                  >\r\n                    About\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link js-scroll-trigger\" href=\"/#services\">\r\n                    Services\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link js-scroll-trigger\" href=\"#contact\">\r\n                    Contact\r\n                  </a>\r\n                </li>\r\n\r\n                {isAuthenticated ? authLinks : guestLink}\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Navbar);\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"bg-light py-5\">\r\n      <div className=\"container\">\r\n        <div className=\"small text-center text-muted\">\r\n          Copyright © 2020 - Blood Donation\r\n          </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass History extends Component {\r\n  state = {\r\n    date: \"\",\r\n    url: \"\",\r\n    specifications: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newHistory = {\r\n      date: this.state.date,\r\n      url: this.state.url,\r\n      specifications: this.state.specifications,\r\n    };\r\n\r\n    this.props.handleSubmitHistory(newHistory);\r\n    this.setState({\r\n      date: \"\",\r\n      url: \"\",\r\n      specifications: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"py-5\">\r\n          <Row>\r\n            <Card style={{ width: \"100%\" }}>\r\n              <CardHeader>\r\n                <h4 className=\"mb-0\">Add medical history:</h4>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={this.onSubmit}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"exampleDate\">Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"date\"\r\n                      id=\"date\"\r\n                      value={this.state.date}\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Date placeholder\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"exampleUrl\">Uploading medical file</Label>\r\n                    <Input\r\n                      type=\"url\"\r\n                      name=\"url\"\r\n                      value={this.state.url}\r\n                      onChange={this.onChange}\r\n                      id=\"url\"\r\n                      placeholder=\"Url placeholder\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"specifications\">Other specifications</Label>\r\n                    <Input\r\n                      value={this.state.specifications}\r\n                      onChange={this.onChange}\r\n                      type=\"textarea\"\r\n                      name=\"specifications\"\r\n                      id=\"specifications\"\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"dark\"\r\n                    style={{ marginTop: \"2rem\" }}\r\n                    block\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(History));\r\n","import React from \"react\";\r\n\r\nexport default function TimelineDonor({ historyData }) {\r\n  return (\r\n    <>\r\n      <hr></hr>\r\n      <div className=\"container\">\r\n        <h3 className=\"py-4\">Timeline: </h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"main-timeline\">\r\n              {historyData &&\r\n                historyData.map((e) => {\r\n                  return (\r\n                    <div className=\"timeline\">\r\n                      <span className=\"timeline-icon\"></span>\r\n                      <span className=\"year\">{e.date}</span>\r\n                      <div className=\"timeline-content\">\r\n                        <h2 className=\"title\">Specifications:</h2>\r\n                        <p className=\"pb-3 description\">{e.specifications}</p>\r\n                        <a href={e.url} className=\"btn btn-outline-dark\">\r\n                          View Medical File\r\n                        </a>\r\n                    \r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getDonors,\r\n  getCurrentDonorById,\r\n  updateDonorInfo,\r\n  changeCurrentDonorInfo,\r\n} from \"../../actions/donorActions\";\r\nimport History from \"./History\";\r\nimport TimelineDonor from \"./TimelineDonor\";\r\nimport Alert from './../shared/Alert/Alert';\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nclass EditDonor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routeChange = this.routeChange.bind(this);\r\n\r\n    this.state = {\r\n      modal: false,\r\n      firstTime: true,\r\n      name: \"\",\r\n      email: \"\",\r\n      age: \"\",\r\n      weight: \"\",\r\n      phone_number: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.getCurrentDonorById(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.updateDonorInfo(\r\n      this.props.match.params.id,\r\n      this.props.donor.currentDonor\r\n    );\r\n  };\r\n\r\n  handleSubmitHistory = (data) => {\r\n    let currentHistory = this.props.donor.currentDonor.history || [];\r\n    currentHistory.push(data);\r\n    this.props.updateDonorInfo(this.props.match.params.id, {\r\n      history: currentHistory,\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    let payload = {\r\n      name,\r\n      value,\r\n    };\r\n    this.props.changeCurrentDonorInfo(payload);\r\n  };\r\n  routeChange() {\r\n    let path = `/dashboard/donors`;\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <Alert color=\"info\" className=\"text-center\" isOpen={isSuccessUpdate}>\r\n            Donor information has been updated!\r\n          </Alert> */}\r\n          \r\n          <Container style={{ paddingTop: \"30px\", paddingBottom: \"30px\" }}>\r\n            <Button outline color=\"secondary\" onClick={this.routeChange}>\r\n              Back\r\n            </Button>\r\n            <h3 style={{ marginTop: \"30px\" }}>Edit Donors Log</h3>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"donor\">Donor</Label>\r\n                <Input\r\n                  required\r\n                  input=\"text\"\r\n                  name=\"name\"\r\n                  id=\"donor\"\r\n                  value={\r\n                    (this.props.donor.currentDonor &&\r\n                      this.props.donor.currentDonor.name) ||\r\n                    \"\"\r\n                  }\r\n                  placeholder=\"Add Name donor\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  required\r\n                  input=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={this.props.donor.currentDonor.email || \"\"}\r\n                  placeholder=\"Add Email\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Label htmlFor=\"age\">Age</Label>\r\n                <Input\r\n                  required\r\n                  input=\"text\"\r\n                  name=\"age\"\r\n                  id=\"age\"\r\n                  value={this.props.donor.currentDonor.age || \"\"}\r\n                  placeholder=\"Add Age\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Label htmlFor=\"weight\">Weight</Label>\r\n                <Input\r\n                  required\r\n                  input=\"text\"\r\n                  name=\"weight\"\r\n                  id=\"weight\"\r\n                  value={this.props.donor.currentDonor.weight || \"\"}\r\n                  placeholder=\"Add weight\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Label htmlFor=\"phone_number\">Phone number</Label>\r\n                <Input\r\n                  required\r\n                  input=\"text\"\r\n                  name=\"phone_number\"\r\n                  id=\"phone_number\"\r\n                  value={this.props.donor.currentDonor.phone_number || \"\"}\r\n                  placeholder=\"Add Phone Number\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Button color=\"success\" style={{ marginTop: \"2rem\" }} block>\r\n                  Update donor\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        <div className=\"container\">\r\n          {this.props.donor.currentDonor && (\r\n            <History handleSubmitHistory={this.handleSubmitHistory} />\r\n          )}\r\n          {this.props.donor.currentDonor && (\r\n            <TimelineDonor\r\n              historyData={this.props.donor.currentDonor.history}\r\n            />\r\n          )}\r\n          {/* {this.props.donor.currentDonor && (\r\n            <TimelineDonor2\r\n              historyData={this.props.donor.currentDonor.history}\r\n            />\r\n          )} */}\r\n        </div>\r\n        {\r\n            this.props.main.isOpenAlert === true && (\r\n              <Alert text={this.props.main.text} style={this.props.main.style} handleClose={this.props.closeAlert}/>  \r\n            )\r\n          }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  donor: state.donor,\r\n  main:state.main\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    getDonors,\r\n    getCurrentDonorById,\r\n    updateDonorInfo,\r\n    changeCurrentDonorInfo,\r\n  })(EditDonor)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport EditDonor from \"../components/donor/EditDonorModal\";\r\n\r\nclass EditDonors extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"EditDonors\">\r\n        <Navbar />\r\n        <div className=\"donorsDetailes\">\r\n          <EditDonor />\r\n        </div>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditDonors;\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            };\r\n        \r\n        case REGISTER_SUCCESS:\r\n            // localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                // ...action.payload,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  GET_DONORS,\r\n  CHANGE_CURRENT_DONOR_INFO,\r\n  ADD_DONORS,\r\n  DELETE_DONORS,\r\n  DONORS_LOADING,\r\n  SET_CURRENT_DONOR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  donors: [],\r\n  currentDonor: {\r\n    isSuccessUpdate: false,\r\n  },\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_DONORS:\r\n      return {\r\n        ...state,\r\n        donors: action.payload,\r\n        loading: false,\r\n      };\r\n    case CHANGE_CURRENT_DONOR_INFO:\r\n      return {\r\n        ...state,\r\n        currentDonor: {\r\n          ...state.currentDonor,\r\n          [action.payload.name]: action.payload.value,\r\n        },\r\n      };\r\n    case DELETE_DONORS:\r\n      return {\r\n        ...state,\r\n        donors: state.donors.filter((donor) => donor._id !== action.payload),\r\n      };\r\n    case ADD_DONORS:\r\n      return {\r\n        ...state,\r\n        donors: [action.payload, ...state.donors],\r\n      };\r\n    case SET_CURRENT_DONOR:\r\n      return {\r\n        ...state,\r\n        currentDonor: {\r\n          ...state.currentDonor,\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case DONORS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_REQUESTS, ADD_REQUESTS, ADD_COMMENT,GET_APPOINTMENTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  requests: [],\r\n  appointments:[]\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_REQUESTS:\r\n      return {\r\n        ...state,\r\n        requests: action.payload,\r\n      };\r\n    case GET_APPOINTMENTS:\r\n      return {\r\n        ...state,\r\n        appointments: action.payload,\r\n        // loading: false\r\n      };\r\n    case ADD_REQUESTS:\r\n      return {\r\n        ...state,\r\n        requests: [action.payload, ...state.requests],\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        requests: [action.payload, ...state.requests],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_FEEDBACKS,\r\n  OPEN_ALERT,\r\n  CLOSE_ALERT,\r\n  GET_QUESTIONS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  feedbacks: [],\r\n  questions: [],\r\n  isOpenAlert: false,\r\n  text: \"\",\r\n  style: \"success\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_FEEDBACKS:\r\n      return {\r\n        ...state,\r\n        feedbacks: action.payload,\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n      };\r\n    case OPEN_ALERT: {\r\n      return {\r\n        ...state,\r\n        isOpenAlert: true,\r\n        text: action.payload.text,\r\n        style: action.payload.style,\r\n      };\r\n    }\r\n    case CLOSE_ALERT: {\r\n      return {\r\n        ...state,\r\n        isOpenAlert: false,\r\n        text: action.payload.text,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport donorReducer from './donorReducer';\r\nimport requestReducer from './requestReducer';\r\nimport mainReducer from './mainReducer';\r\n\r\nexport default combineReducers({\r\n    error: errorReducer,\r\n    auth: authReducer,\r\n    donor: donorReducer,\r\n    request: requestReducer,\r\n    main: mainReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction NotificationCardModel(props) {\r\n  const { data } = props;\r\n  const date = data.title ? new Date(data.date) : new Date();\r\n  return true ? (\r\n    <div className=\"row mb-4 \">\r\n      <div className=\" col  card text-center\" style={{padding:\"0\"}}>\r\n        {data.viewedBy &&\r\n        data.viewedBy.includes(props.auth.user._id) === false ? (\r\n          <div className=\"card-header custom_header_notification\" style={{color:\"#B22222\"}}>\r\n           <h5>Notifications</h5> {\" \"}\r\n            <span className=\"badge badge-secondary custom_bagde\">New</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"card-header\">Notifications</div>\r\n        )}\r\n\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{data.title || \"No title\"}</h5>\r\n          <p className=\"card-text\">{data.description}</p>\r\n    \r\n          <Link  className=\"btn btn-primary btn-xl js-scroll-trigger\" to={`/notifications/${data._id}`}>\r\n          View notification\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"card-footer text-muted\">\r\n          <Moment fromNow>{date}</Moment>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  request: state.request,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(NotificationCardModel));\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n// eslint-disable-next-line\r\nimport { Button } from \"bootstrap\";\r\nimport NotificationCardModel from \"../components/shared/CardModel/NotificationCardModel\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport BreadcrumsModel from \"./../components/shared/Breadcrum/BreadcrumsModel\";\r\nclass NotificationsPage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <BreadcrumsModel\r\n          options={[{ to: \"/\", name: \"Blood D\" }]}\r\n          currentLink=\"Notifications\"\r\n        />\r\n        <section\r\n          className=\"my-5 page-section-notification bg-primary shadow-lg \"\r\n          id=\"about\"\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-8 text-center\">\r\n                <h2 className=\"text-white mt-0\"> View all notifications</h2>\r\n                <hr className=\"divider light my-4\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <div className=\"container\">\r\n          {this.props.request.requests &&\r\n            this.props.request.requests.map((e) => {\r\n              return <NotificationCardModel data={e} />;\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  request: state.request,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(NotificationsPage));\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport default function CommentCard(props) {\r\n   const authorTemp = props.data.author.length > 0 ? (props.data.author[0].toUpperCase() +  props.data.author.slice(1)):''\r\n  return (\r\n    props.data && (\r\n      <>\r\n       <section className=\"comments\">\r\n       <article className=\"comment\">\r\n          <a className=\"comment-img\" href=\"#non\" >\r\n              <img\r\n                src=\"https://www.greenhandle.in/images/default_profile_greenhandle.png?%3E\"\r\n                alt=\"\"\r\n                width=\"50\"\r\n                height=\"50\"\r\n              />\r\n            </a>\r\n          <div className=\"comment-body\">\r\n            <div className=\"text\">\r\n              <p>{props.data.description || \"no\"}</p>\r\n            </div>\r\n            <p className=\"attribution\">\r\n              by <a href=\"#non\">{ authorTemp || \"anonymus\"}</a> |\r\n               {\" \"}<Moment fromNow>{ props.data.date }</Moment>\r\n            </p>\r\n          </div>\r\n        </article>\r\n       </section>\r\n      </>\r\n    )\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CommentCard from \"./CommentCard\";\r\n\r\nexport default class CommentSection extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\" py-3 shadow-sm p-3 mb-5 bg-white rounded\">\r\n          <div className=\"row\">\r\n            <div className=\"card\" style={{width:\"100%\"}}>\r\n              <div className=\"card-header\" style={{background: '#03A9F4'}}>\r\n              <h4 className=\"mb-0\">Comments:</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"text\">\r\n                {this.props.comments.length &&\r\n                  this.props.comments.map((e) => {\r\n                    return <CommentCard data={e} />;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport BreadcrumsModel from \"./../components/shared/Breadcrum/BreadcrumsModel\";\r\nimport Moment from \"react-moment\";\r\nimport CommentSection from \"./../components/shared/CommentSection/CommentSection\";\r\nimport {\r\n  addComment,\r\n  getRequests,\r\n  updateViewField,\r\n} from \"../actions/requestActions\";\r\nimport Alert from \"./../components/shared/Alert/Alert\";\r\n\r\nclass ViewNotification extends Component {\r\n  componentDidMount() {\r\n    this.props.getRequests();\r\n\r\n    if (this.props.auth.user !== null) {\r\n      const user_id = this.props.auth.user._id;\r\n      if (this.props.request.requests) {\r\n        this.props.request.requests.map((notification, index) => {\r\n          if (notification._id === this.props.match.params.id) {\r\n            const viewedByTemp = notification.viewedBy;\r\n            if (viewedByTemp.includes(user_id) === false) {\r\n              viewedByTemp.push(user_id);\r\n              this.props.updateViewField(notification._id, viewedByTemp);\r\n            }\r\n          }\r\n          return null;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  state = {\r\n    comments: \"\",\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id_notification = this.props.match.params.id;\r\n    this.props.request.requests &&\r\n      this.props.request.requests.map((e, index) => {\r\n        if (e._id === id_notification) {\r\n          let comments = e.comments;\r\n          const comment = {\r\n            author: this.props.auth.user.name,\r\n            author_id: this.props.auth.user._id,\r\n            description: this.state.comments,\r\n            date: new Date(),\r\n          };\r\n          comments.push(comment);\r\n          this.setState({\r\n            comments: \"\",\r\n          });\r\n          this.props.addComment(id_notification, comments);\r\n        }\r\n        return null;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.request.requests && \r\n        this.props.auth.user &&\r\n          this.props.request.requests.map((e, index) => {\r\n            if (e._id === this.props.match.params.id)\r\n              return (\r\n                <>\r\n                  <Navbar />\r\n\r\n                  <BreadcrumsModel\r\n                    options={[\r\n                      { to: \"/\", name: \"Blood D\" },\r\n                      { to: \"/notifications\", name: \"Notifications\" },\r\n                    ]}\r\n                    currentLink=\"Donare Sange\"\r\n                  />\r\n\r\n                  <>\r\n                    <div\r\n                      className=\"notification\"\r\n                      style={{ marginLeft: \"200px\", marginRight: \"200px\" }}\r\n                    >\r\n                      <div\r\n                        className=\"col jumbotron shadow-lg p-5 my-5 bg-white rounded\"\r\n                        style={{\r\n                          borderRadius: \"4px\",\r\n                        }}\r\n                      >\r\n                        <h1\r\n                          className=\"display-4\"\r\n                          style={{ opacity: \"0.8\", color: \"#800000\" }}\r\n                        >\r\n                          Import notification\r\n                        </h1>\r\n                        <h3>Title: {e.title}</h3>\r\n                        <p className=\"lead my-5\"> {e.description}</p>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <p>\r\n                          <span className=\"author\" style={{ color: \"#B22222\" }}>\r\n                            {e.author}\r\n                          </span>{\" \"}\r\n                          requests{\" \"}\r\n                          <span className=\"request\">{e.blood_type} !</span>\r\n                        </p>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <span>\r\n                          {<Moment fromNow>{new Date(e.date)}</Moment>}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                  <div className=\"container\" style={{maxWidth:\"1500px\"}}>\r\n                    <div className=\"py-3\">\r\n                      <Row>\r\n                        <Card style={{ width: \"100%\" }}>\r\n                          <CardHeader>\r\n                            <h4 className=\"mb-0\">Add comment </h4>\r\n                          </CardHeader>\r\n                          <CardBody>\r\n                            <Form onSubmit={this.onSubmit}>\r\n                              <FormGroup>\r\n                                <Label htmlFor=\"request\">\r\n                                  <h5 className=\"mb-0\"> \r\n                                  {/* Author */}\r\n                                    {this.props.auth.user.name}\r\n                                    </h5>\r\n                                </Label>\r\n                                <Input\r\n                                  className=\"my-4\"\r\n                                  required\r\n                                  input=\"text\"\r\n                                  name=\"comments\"\r\n                                  value={this.state.comments}\r\n                                  id=\"comments\"\r\n                                  placeholder=\"Add comments\"\r\n                                  onChange={this.onChange}\r\n                                />\r\n                                <Button\r\n                                  color=\"dark\"\r\n                                  style={{ marginTop: \"2rem\" }}\r\n                                  block\r\n                                >\r\n                                  Add a comment\r\n                                </Button>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Row>\r\n                    </div>\r\n                    <hr />\r\n\r\n                    <CommentSection comments={e.comments} />\r\n                  </div>\r\n                  {this.props.main.isOpenAlert === true && (\r\n                    <Alert\r\n                      text={this.props.main.text}\r\n                      style={this.props.main.style}\r\n                      handleClose={this.props.closeAlert}\r\n                    />\r\n                  )}\r\n                </>\r\n              );\r\n            return null;\r\n          })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  request: state.request,\r\n  auth: state.auth,\r\n  main: state.main,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { addComment, getRequests, updateViewField })(\r\n    ViewNotification\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nclass FeedbackModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rating: \"\",\r\n      typeOfFeedback: \"\",\r\n      description: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  toggle = () => {\r\n    this.props.handleClose(!this.props.isOpen);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.rating !== \"\" &&\r\n      this.state.typeOfFeedback !== \"\" &&\r\n      this.state.description !== \"\"\r\n    ) {\r\n      const newRequest = {\r\n        rating: this.state.rating,\r\n        typeOfFeedback: this.state.typeOfFeedback,\r\n        description: this.state.description,\r\n      };\r\n      this.props.addFeedback(newRequest);\r\n    }\r\n\r\n    this.props.handleClose(false);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal isOpen={this.props.isOpen} toggle={this.toggle}>\r\n          <ModalHeader   >Feedback</ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <h4>We would like your feedback to improve our website.</h4>\r\n                <h6>What is your opinion of this page?</h6>\r\n                <div className=\"customModalBody\">\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-danger\": this.state.rating === \"1\",\r\n                    })}\r\n                    onClick={() => this.setState({ rating: \"1\" })}\r\n                  >\r\n                    <i className=\"far fa-smile-wink\"></i> {this.state.rating}\r\n                  </button>\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-danger\": this.state.rating === \"2\",\r\n                    })}\r\n                    onClick={() => this.setState({ rating: \"2\" })}\r\n                  >\r\n                    <i className=\"far fa-smile-wink\"></i>\r\n                  </button>\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-primary\": this.state.rating === \"3\",\r\n                    })}\r\n                    onClick={() => this.setState({ rating: \"3\" })}\r\n                  >\r\n                    <i className=\"far fa-smile-wink\"></i>\r\n                  </button>\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-info\": this.state.rating === \"4\",\r\n                    })}\r\n                    onClick={() => this.setState({ rating: \"4\" })}\r\n                  >\r\n                    <i className=\"far fa-smile-wink\"></i>\r\n                  </button>\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-success\": this.state.rating === \"5\",\r\n                    })}\r\n                    onClick={() => this.setState({ rating: \"5\" })}\r\n                  >\r\n                    <i className=\"far fa-smile-wink\"></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <hr />\r\n                <h6>Please select your feedback category below.</h6>\r\n                <div className=\"customModalBody\">\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-primary\": this.state.typeOfFeedback === \"suggestion\",\r\n                    })}\r\n                    onClick={() =>\r\n                      this.setState({ typeOfFeedback: \"suggestion\" })\r\n                    }\r\n                  >\r\n                    Suggestion\r\n                  </button>\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-danger\": this.state.typeOfFeedback === \"bug\",\r\n                    })}\r\n                    onClick={() => this.setState({ typeOfFeedback: \"bug\" })}\r\n                  >\r\n                    Bug\r\n                  </button>\r\n                  <button\r\n                    className={classNames(\"btn\", {\r\n                      \"btn-success\": this.state.typeOfFeedback === \"compliment\",\r\n                    })}\r\n                    onClick={() =>\r\n                      this.setState({ typeOfFeedback: \"compliment\" })\r\n                    }\r\n                  >\r\n                    Compliment\r\n                  </button>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleFormControlTextarea1\">\r\n                    Please tell us something.\r\n                  </label>\r\n                  <textarea\r\n               \r\n                    value={this.state.description}\r\n                    onChange={(e) =>\r\n                      this.setState({ description: e.target.value })\r\n                    }\r\n                    className=\"form-control\"\r\n                    id=\"exampleFormControlTextarea1\"\r\n                    rows=\"3\"\r\n                    required\r\n                  ></textarea>\r\n                </div>\r\n                <Button\r\n                  onClick={this.onSubmit}\r\n                  color=\"success\"\r\n                  style={{ marginTop: \"2rem\" }}\r\n                  block\r\n                >\r\n                  Send Feedback\r\n                </Button>\r\n                <Button\r\n                  onClick={() => this.props.handleClose(false)}\r\n                  color=\"dark\"\r\n                  style={{ marginTop: \"2rem\" }}\r\n                  block\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(FeedbackModal);\r\n","import axios from \"axios\";\r\nimport { returnAlert } from \"./errorActions\";\r\nimport { GET_FEEDBACKS, CLOSE_ALERT,GET_QUESTIONS,LOGIN_SUCCESS } from \"./types\";\r\n\r\nexport const addFeedback = (feedback) => (dispatch) => {\r\n  return axios\r\n    .post(`/api/feedback`, feedback)\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Add Feedback Successfully\", \"success\"));\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": :Add Feedback Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const addQuestion = (question) => (dispatch) => {\r\n  return axios\r\n    .post(`/api/question`, question)\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Add Question Successfully\", \"success\"));\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": :Add Question Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const closeAlert = () => (dispatch) => {\r\n  return dispatch({\r\n    type: CLOSE_ALERT,\r\n    payload: { text: \"\" },\r\n  });\r\n};\r\n\r\nexport const getFeedbacks = () => (dispatch) => {\r\n  axios\r\n    .get(\"/api/feedback\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_FEEDBACKS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": :Feedbacks Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const updateFeedback = (id_app, status) => (dispatch) => {\r\n  axios\r\n    .patch(`/api/feedback/${id_app}`, { status })\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Update Feedback Successfully\", \"success\"));\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": :Update Feedback Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\nexport const updateUser = (id_app, data) => (dispatch) => {\r\n  axios\r\n    .patch(`/api/users/${id_app}`, data)\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Update User Successfully\", \"success\"));\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": :Update User Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\nexport const updateUserPassword = (id_app, data) => (dispatch) => {\r\n  axios\r\n    .post(`/api/users/password/${id_app}`, data)\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Update User Password Successfully\", \"success\"));\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + err.response.data.msg || \": :Update User Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\nexport const getQuestions = () => (dispatch) => {\r\n  axios\r\n    .get(\"/api/question\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_QUESTIONS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \":Questions Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\nexport const updateQuestions = (id_app, data) => (dispatch) => {\r\n  axios\r\n    .patch(`/api/question/${id_app}`,data)\r\n    .then((res) => {\r\n      dispatch(returnAlert(\"Update Questions Successfully\", \"success\"));\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        returnAlert(\r\n          `[${err.response.status}] : ${\r\n            err.response.data + \": Update Questions Failed\"\r\n          }`,\r\n          \"danger\"\r\n        )\r\n      )\r\n    );\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass QuestionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      author: \"\",\r\n      email: \"\",\r\n      question: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  toggle = () => {\r\n    this.props.handleClose(!this.props.isOpen);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.author !== \"\" && this.state.question !== \"\") {\r\n      const newQuestion = {\r\n        author: this.state.author,\r\n        email: this.state.email,\r\n        question: this.state.question,\r\n      };\r\n      this.props.addQuestion(newQuestion);\r\n    }\r\n\r\n    this.props.handleClose(false);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal isOpen={this.props.isOpen} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Question</ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <h3>Ask a question.</h3>\r\n                <h6>Please contact us for specific reasons</h6>\r\n                <Label htmlFor=\"author\">Name</Label>\r\n                <Input\r\n                  required\r\n                  input=\"text\"\r\n                  name=\"author\"\r\n                  id=\"author\"\r\n                  value={this.state.author}\r\n                  // disabled\r\n                  placeholder=\"Add Your Name\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Label htmlFor=\"email\">Email:</Label>\r\n                <Input\r\n                  required\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={this.state.email}\r\n                  placeholder=\"Add email\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Label htmlFor=\"question\">Question:</Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"question\"\r\n                  id=\"question\"\r\n                  value={this.state.question}\r\n                  placeholder=\"Add question\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button\r\n                  onClick={this.onSubmit}\r\n                  color=\"success\"\r\n                  style={{ marginTop: \"2rem\" }}\r\n                  block\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(QuestionModal);\r\n","import React, { useState } from \"react\";\r\nimport FeedbackModal from \"./../../feedback/FeedbackModal\";\r\nimport { addFeedback, addQuestion } from \"../../../actions/mainActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport QuestionModal from \"./../../question/QuestionModal\";\r\n\r\nfunction PageOptions(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenQuestion, setIsOpenQustion] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"pageOptions\">\r\n        <div className=\"btn-group dropleft\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info dropdown-toggle btn-lg btn-circle\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          ></button>\r\n          <div\r\n            className=\"dropdown-menu customDropLeft\"\r\n            x-placement=\"left-start\"\r\n          >\r\n            {/* eslint-disable-next-line */}\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              onClick={() => setIsOpen(true)}\r\n            >\r\n              Add feedback\r\n            </a>\r\n            <div className=\"dropdown-divider\"></div>\r\n            {/* eslint-disable-next-line */}\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              onClick={() => setIsOpenQustion(true)}\r\n            >\r\n              FAQ\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <FeedbackModal\r\n        isOpen={isOpen}\r\n        handleClose={setIsOpen}\r\n        addFeedback={props.addFeedback}\r\n      />\r\n      <QuestionModal\r\n        isOpen={isOpenQuestion}\r\n        handleClose={setIsOpenQustion}\r\n        addQuestion={props.addQuestion}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { addFeedback, addQuestion })(PageOptions)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getRequests } from \"../actions/requestActions\";\r\nimport Footer from \"./Footer\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getDonors } from \"./../actions/donorActions\";\r\nimport PageOptions from \"./shared/PageOptions/PageOptions\";\r\nimport Alert from \"./shared/Alert/Alert\";\r\nimport { closeAlert } from \"../actions/mainActions\";\r\nimport Spinner from \"./shared/Spinner\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getDonors();\r\n  }\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    if (this.props.auth.isLoading === false)\r\n      return (\r\n        <>\r\n          <Navbar />\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <nav\r\n                id=\"sidebar\"\r\n                className={classNames(\r\n                  \"navbar navbar-expand-lg navbar-light col-xs-2 col-sm-2 col-md-2 d-md-block sidebar custom-sidebar\",\r\n                  { isHide: this.state.isOpen === false }\r\n                )}\r\n              >\r\n                <div className=\"sidebar-sticky\">\r\n                  <h6\r\n                    onClick={(e) =>\r\n                      this.setState({ isOpen: !this.state.isOpen })\r\n                    }\r\n                    className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\"\r\n                  >\r\n                    <i className=\"fas fa-bars anchor\"></i>\r\n                  </h6>\r\n                  <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                      <Link\r\n                        className={classNames(\"nav-link\", {\r\n                          active: window.location.pathname === \"/dashboard\",\r\n                        })}\r\n                        to=\"/dashboard\"\r\n                      >\r\n                        <i className=\"fab fa-mendeley\"></i>{\" \"}\r\n                        <span className=\"title\">Dashboard</span>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link\r\n                        className={classNames(\"nav-link\", {\r\n                          active:\r\n                            window.location.pathname ===\r\n                            \"/dashboard/appointment\",\r\n                        })}\r\n                        to=\"/dashboard/appointment\"\r\n                      >\r\n                        <i className=\"fas fa-folder-minus\"></i>{\" \"}\r\n                        <span className=\"title\">My appointments</span>\r\n                      </Link>\r\n                    </li>\r\n                    {this.props.auth.user &&\r\n                      this.props.auth.user.role === \"donor\" && (\r\n                        <li className=\"nav-item\">\r\n                          <Link\r\n                            className={classNames(\"nav-link\", {\r\n                              active:\r\n                                window.location.pathname ===\r\n                                \"/dashboard/timetable\",\r\n                            })}\r\n                            to=\"/dashboard/timetable\"\r\n                          >\r\n                            <i className=\"fas fa-users\"></i>{\" \"}\r\n                            <span className=\"title\">Timetable</span>\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                    {this.props.auth.user &&\r\n                      this.props.auth.user.role === \"admin\" && (\r\n                        <>\r\n                          <li className=\"nav-item\">\r\n                            <Link\r\n                              className={classNames(\"nav-link\", {\r\n                                active:\r\n                                  window.location.pathname ===\r\n                                  \"/dashboard/questions\",\r\n                              })}\r\n                              to=\"/dashboard/questions\"\r\n                            >\r\n                              <i className=\"fas fa-folder-minus\"></i>{\" \"}\r\n                              <span className=\"title\">Questions</span>\r\n                            </Link>\r\n                          </li>\r\n\r\n                          <li className=\"nav-item\">\r\n                            <Link\r\n                              className={classNames(\"nav-link\", {\r\n                                active:\r\n                                  window.location.pathname ===\r\n                                  \"/dashboard/donors\",\r\n                              })}\r\n                              to=\"/dashboard/donors\"\r\n                            >\r\n                              <i className=\"fas fa-users\"></i>{\" \"}\r\n                              <span className=\"title\">Donors Lists</span>\r\n                            </Link>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                            <Link\r\n                              className={classNames(\"nav-link\", {\r\n                                active:\r\n                                  window.location.pathname ===\r\n                                  \"/dashboard/feedback\",\r\n                              })}\r\n                              to=\"/dashboard/feedback\"\r\n                            >\r\n                              <i className=\"fas fa-users\"></i>{\" \"}\r\n                              <span className=\"title\">Feedbacks</span>\r\n                            </Link>\r\n                          </li>\r\n                        </>\r\n                      )}\r\n                  </ul>\r\n\r\n                  <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n                    <i className=\"fas fa-question-circle\"></i>\r\n                  </h6>\r\n                </div>\r\n              </nav>\r\n\r\n              <main\r\n                role=\"main\"\r\n                id=\"main\"\r\n                className=\"custom_main col-xs-2 col-sm-9 col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\"\r\n              >\r\n                {this.props.children}\r\n              </main>\r\n            </div>\r\n          </div>\r\n          <PageOptions />\r\n          {this.props.main.isOpenAlert === true && (\r\n            <Alert\r\n              text={this.props.main.text}\r\n              style={this.props.main.style}\r\n              handleClose={this.props.closeAlert}\r\n            />\r\n          )}\r\n          <Footer />\r\n        </>\r\n      );\r\n    else return <Spinner />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  request: state.request,\r\n  auth: state.auth,\r\n  main: state.main,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getRequests, getDonors, closeAlert })(Dashboard)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nexport default function ConfirmModal(props) {\r\n  return (\r\n    <>\r\n      <Modal isOpen={props.isOpen} toggle={props.toggle}>\r\n        <ModalHeader toggle={props.toggle}>Confirm Modal</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label htmlFor=\"name\">{props.question}</Label>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                props.toggle();\r\n                return props.handleAnswer(\"continue\");\r\n              }}\r\n              className=\"btn btn-default\"\r\n              color=\"outline-success\"\r\n              style={{ marginTop: \"2rem\" }}\r\n              block\r\n            >\r\n              Continue\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                props.toggle();\r\n                return props.handleAnswer(\"cancel\");\r\n              }}\r\n              className=\"btn btn-default\"\r\n              color=\"outline-danger\"\r\n              style={{ marginTop: \"2rem\" }}\r\n              block\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </FormGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n  getFeedbacks, updateFeedback\r\n} from \"./../../actions/mainActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ConfirmModal from \"./ConfirmModal\";\r\nimport BreadcrumsModel from './../shared/Breadcrum/BreadcrumsModel';\r\n\r\nclass MainDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isOpenConfirm: false,\r\n      questionConfirm: \"\",\r\n      idAppointment: \"\",\r\n      searchText: \"\",\r\n      status: \"\",\r\n      checkboxDenied: true,\r\n      checkboxAccepted: true,\r\n      checkboxPending: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getFeedbacks();\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n  toggleConfirm = () => {\r\n    this.setState({ isOpenConfirm: !this.state.isOpenConfirm });\r\n  };\r\n  handleSendApp = () => {\r\n    // RO DO change status\r\n\r\n  };\r\n\r\n  handleStatus = async (idDonor, status) => {\r\n    this.props.updateAppointment(idDonor, status);\r\n    await this.props.getAppointment();\r\n  };\r\n  handleAnswer = async (answer) => {\r\n    if (answer === \"cancel\") {\r\n      this.setState({\r\n        isOpenConfirm: false,\r\n        questionConfirm: \"\",\r\n      });\r\n    } else if (answer === \"continue\") {\r\n      this.props.updateFeedback(this.state.idAppointment, this.state.status);\r\n      await this.props.getFeedbacks();\r\n    }\r\n  };\r\n\r\n  filterData = (name, email, status) => {\r\n    if (\r\n      this.state.searchText === \"\" ||\r\n      name.includes(this.state.searchText) ||\r\n      email.includes(this.state.searchText) ||\r\n      status.includes(this.state.searchText)\r\n    ) {\r\n      if (\r\n        status.toLowerCase() === \"pending\" &&\r\n        this.state.checkboxPending === true\r\n      )\r\n        return true;\r\n      if (\r\n        status.toLowerCase() === \"accepted\" &&\r\n        this.state.checkboxAccepted === true\r\n      )\r\n        return true;\r\n      if (\r\n        status.toLowerCase() === \"denied\" &&\r\n        this.state.checkboxDenied === true\r\n      )\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <>\r\n       <BreadcrumsModel\r\n                options={[{ to: \"/\", name: \"Blood Donation\" }]}\r\n                currentLink=\"Feedbacks\"\r\n            />\r\n        {user && user.role === \"admin\" && (\r\n          <>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                value={this.state.searchText}\r\n                onChange={(e) => this.setState({ searchText: e.target.value })}\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxPending}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxPending: !this.state.checkboxPending,\r\n                    })\r\n                  }\r\n                  id=\"checkboxPending\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxPending\">\r\n                  Pending\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxAccepted}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxAccepted: !this.state.checkboxAccepted,\r\n                    })\r\n                  }\r\n                  id=\"checkboxAccepted\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxAccepted\">\r\n                  Accepted\r\n                </label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxDenied}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxDenied: !this.state.checkboxDenied,\r\n                    })\r\n                  }\r\n                  id=\"checkboxDenied\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxDenied\">\r\n                  Denied\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <table className=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Rating</th>\r\n                  <th scope=\"col\">Type OF</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th className=\"text-center\" scope=\"col\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.main.feedbacks &&\r\n                  this.props.main.feedbacks.map(\r\n                    (\r\n                      { _id, rating,typeOfFeedback,description, status = \"pending\" },\r\n                      index\r\n                    ) => {\r\n                      if (this.filterData(typeOfFeedback.toLowerCase(), description.toLowerCase(), status) === true)\r\n                        return (\r\n                          <tr>\r\n                            <th scope=\"row\">{index + 1}</th>\r\n                            <td>{rating}</td>\r\n                            <td>{typeOfFeedback}</td>\r\n                            <td>{description}</td>\r\n                            <td>{status.toUpperCase()}</td>\r\n                            <td className=\"text-center\" >\r\n                              <button\r\n                                title=\"Accepted\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isOpenConfirm: true,\r\n                                    questionConfirm:\r\n                                      \"Are you sure you wanna publish this feedback?\",\r\n                                    idAppointment: _id,\r\n                                    status: \"Accepted\",\r\n                                  })\r\n                                }\r\n                                className=\"btn btn-success mx-2\"\r\n                              >\r\n                               Accepted\r\n                              </button>\r\n                              <button\r\n                                title=\"Denied\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isOpenConfirm: true,\r\n                                    questionConfirm:\r\n                                      \"Are you sure you wanna denie this appointment?\",\r\n                                    idAppointment: _id,\r\n                                    status: \"Denied\",\r\n                                  })\r\n                                }\r\n                                className=\"btn btn-danger\"\r\n                              >\r\n                               Denied\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                        return null;\r\n                    }\r\n                  )}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n<ConfirmModal\r\n          isOpen={this.state.isOpenConfirm}\r\n          toggle={this.toggleConfirm}\r\n          question={this.state.questionConfirm}\r\n          handleAnswer={this.handleAnswer}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  donor: state.donor,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  request: state.request,\r\n  main:state.main\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getFeedbacks, updateFeedback })(\r\n    MainDashboard\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport BreadcrumsModel from \"../shared/Breadcrum/BreadcrumsModel\";\r\nimport TimelineDonor from \"./../donor/TimelineDonor\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as _ from \"lodash\";\r\n\r\nfunction MedicalHistory(props) {\r\n  if (_.isEmpty(props.auth.user)) return <h1>lod</h1>;\r\n  else\r\n    return (\r\n      <>\r\n        <BreadcrumsModel\r\n          options={[{ to: \"/\", name: \"Blood D\" }]}\r\n          currentLink=\"Timeline\"\r\n        />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {props.auth && props.auth.user.role === \"donor\" &&\r\n              props.donor.donors.map((don) => {\r\n                if (props.auth.user.email === don.email) {\r\n                  return <TimelineDonor historyData={don.history} />;\r\n                } else return null;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  donor: state.donor,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(MedicalHistory));\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLaptopCode,\r\n  faUserCircle,\r\n  faHeart,\r\n  faPhone,\r\n  faEnvelope,\r\n  faMapMarked\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"./shared/Spinner\";\r\nimport Alert from \"./shared/Alert/Alert\";\r\n\r\nfunction HomePage(props) {\r\n  if (props.main.feedbacks.length === 0) return <Spinner/>;\r\n  else\r\n    return (\r\n      <>\r\n        <header className=\"masthead\">\r\n          <div className=\"container h-100\">\r\n            <div className=\"row h-100 align-items-center justify-content-center text-center\">\r\n              <div className=\"col-lg-10 align-self-end\">\r\n                <h1 className=\"text-uppercase text-white font-weight-bold\">\r\n                  Blood donation has never been easier\r\n                </h1>\r\n                <hr className=\"divider my-4\" />\r\n              </div>\r\n              <div className=\"col-lg-8 align-self-baseline\">\r\n                <p className=\"text-white-75 font-weight-light mb-5\">\r\n                  We believe that this is the only way we will succeed. And as a\r\n                  team, and as a country. We trust each other and welcome them\r\n                  with open arms on each of those who want to get involved.\r\n                </p>\r\n                <a\r\n                  className=\"btn btn-primary btn-xl js-scroll-trigger\"\r\n                  href=\"#about\"\r\n                >\r\n                  Find Out More\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* <!-- About--> */}\r\n        <section className=\"page-section bg-primary\" id=\"about\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-8 text-center\">\r\n                <h2 className=\"text-white mt-0\">We've got what you need!</h2>\r\n                <hr className=\"divider light my-4\" />\r\n                <p className=\"text-white-50 mb-4\">\r\n                  We will ensure transparency at all times, honesty and respect\r\n                  for the beneficiaries of our design, our partners and support.\r\n                </p>\r\n                <a\r\n                  className=\"btn btn-light btn-xl js-scroll-trigger\"\r\n                  href=\"#services\"\r\n                >\r\n                  Get Started!\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!-- Services--> */}\r\n        <section className=\"page-section\" id=\"services\">\r\n          <div className=\"container\">\r\n            <h2 className=\"text-center mt-0\">At Your Service</h2>\r\n            <hr className=\"divider my-4\" />\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 col-md-6 text-center\">\r\n                <div className=\"mt-5\">\r\n                  <FontAwesomeIcon icon={faUserCircle} color=\"#03A9F4\" size=\"5x\" />\r\n                  <h3 className=\"h4 mb-2\">Free Account</h3>\r\n                  <p className=\"text-muted mb-0\">\r\n                    We offer you the information you need.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 text-center\">\r\n                <div className=\"mt-5\">\r\n                  <FontAwesomeIcon\r\n                    icon={faLaptopCode}\r\n                    color=\"#03A9F4\"\r\n                    size=\"5x\"\r\n                  />\r\n                  <h3 className=\"h4 mb-2\">Up to Date</h3>\r\n                  <p className=\"text-muted mb-0\">\r\n                    Every moment, at least one man needs blood.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 text-center\">\r\n                <div className=\"mt-5\">\r\n                  <FontAwesomeIcon icon={faMapMarked} color=\"#03A9F4\" size=\"5x\" />\r\n                  <h3 className=\"h4 mb-2\">You can Donate Blood</h3>\r\n                  <p className=\"text-muted mb-0\">\r\n                    Make an appointment at one of the partner centers and donate\r\n                    blood.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 text-center\">\r\n                <div className=\"mt-5\">\r\n                  <FontAwesomeIcon icon={faHeart} color=\"#03A9F4\" size=\"5x\" />\r\n                  <h3 className=\"h4 mb-2\">Made with Love</h3>\r\n                  <p className=\"text-muted mb-0\">\r\n                    The project was based on your support.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!-- Feedbacks--> */}\r\n        <section className=\"page-section\" id=\"services\">\r\n          <div className=\"container\">\r\n            <h2 className=\"text-center mt-0\">Top feedbacks</h2>\r\n            <hr className=\"divider my-4\" />\r\n\r\n            <div className=\"row\">\r\n              {props.main.feedbacks &&\r\n                props.main.feedbacks.map((feedback, index) => {\r\n                  if (feedback.typeOfFeedback === \"compliment\")\r\n                    return (\r\n                      <div className=\"col-lg-3 col-md-6 text-center\">\r\n                        <div className=\"mt-5\">\r\n                          {feedback.rating === \"5\" && (\r\n                            <>\r\n                              <i className=\"far fa-star\"></i>\r\n                              <i className=\"far fa-star\"></i>\r\n                              <i className=\"far fa-star\"></i>\r\n                              <i className=\"far fa-star\"></i>\r\n                              <i className=\"far fa-star\"></i>\r\n                            </>\r\n                          )}\r\n                          {feedback.rating === \"4\" && (\r\n                           <>\r\n                           <i className=\"far fa-star\"></i>\r\n                           <i className=\"far fa-star\"></i>\r\n                           <i className=\"far fa-star\"></i>\r\n                           <i className=\"far fa-star\"></i>\r\n                         </>\r\n                          )}\r\n                           {feedback.rating === \"3\" && (\r\n                           <>\r\n                           <i className=\"far fa-star\"></i>\r\n                           <i className=\"far fa-star\"></i>\r\n                           <i className=\"far fa-star\"></i>\r\n                         </>\r\n                          )}\r\n                           {feedback.rating === \"2\" && (\r\n                           <>\r\n                           <i className=\"far fa-star\"></i>\r\n                           <i className=\"far fa-star\"></i>\r\n\r\n                         </>\r\n                          )}\r\n                           {feedback.rating === \"1\" && (\r\n                           <>\r\n                           <i className=\"far fa-star\"></i>\r\n                         </>\r\n                          )}\r\n                          <h3 className=\"h4 mb-2\">\r\n                            {feedback.typeOfFeedback.toUpperCase()}\r\n                          </h3>\r\n                          <p className=\"text-muted mb-0\">\r\n                            {feedback.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  else return null;\r\n                })}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"page-section\" id=\"contact\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-8 text-center\">\r\n                <h2 className=\"mt-0\">Let's Get In Touch!</h2>\r\n                <hr className=\"divider my-4\" />\r\n                <p className=\"text-muted mb-5\">\r\n                  This app is for Blood Donation Management.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4 ml-auto text-center mb-5 mb-lg-0\">\r\n                <FontAwesomeIcon icon={faPhone} size=\"3x\" />\r\n                <div>+1 (555) 123-4567</div>\r\n              </div>\r\n              <div className=\"col-lg-4 mr-auto text-center\">\r\n                <FontAwesomeIcon icon={faEnvelope} size=\"3x\" />\r\n                <a className=\"d-block\" href=\"mailto:blood.donation.management.free@gmail.com\">\r\n                blood.donation.management.free@gmail.com\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <Alert data={\"Mesaj din home page\"} />\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  main: state.main,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(HomePage));\r\n","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport HomePage from './HomePage';\r\nimport { connect } from 'react-redux';\r\nimport {  withRouter } from 'react-router-dom';\r\nimport Alert from './shared/Alert/Alert';\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            isLoadedState:this.props.auth.isLoading || null\r\n        }\r\n    }\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n      <Navbar />\r\n      <HomePage />\r\n      <Footer />\r\n      {\r\n            this.props.main.isOpenAlert === true && (\r\n              <Alert text={this.props.main.text} style={this.props.main.style} handleClose={this.props.closeAlert}/>  \r\n            )\r\n          }\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  main:state.main\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(Main));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addAppointment } from \"../actions/requestActions\";\r\n\r\nclass AppointmentModal extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: this.props.name,\r\n            email: this.props.email,\r\n            date: \"\"\r\n          };\r\n    }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newRequest = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        date: this.state.date,\r\n        idDonor:this.props.auth.user._id\r\n    };\r\n\r\n    // //Add request via addRequest action\r\n    this.props.addAppointment(newRequest);\r\n    this.props.handleSendApp()\r\n    // //Close modal\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n       \r\n        <Modal isOpen={this.props.isOpen} toggle={this.props.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Make an Appointment</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  value={this.state.name}\r\n                  placeholder=\"Name\"\r\n                  className=\"mb-3\"\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={this.state.email}\r\n                  placeholder=\"Email\"\r\n                  className=\"mb-3\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Label htmlFor=\"exampleDate\">Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  id=\"date\"\r\n                  value={this.state.date}\r\n                    onChange={this.onChange}\r\n                  placeholder=\"date placeholder\"\r\n                />\r\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                  Send\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addAppointment })(AppointmentModal);\r\n","import React, { Component } from \"react\";\r\nimport AppointmentModal from \"../AppointmentModal\";\r\nimport {\r\n  getAppointment,\r\n  updateAppointment,\r\n} from \"./../../actions/requestActions\";\r\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ConfirmModal from \"./ConfirmModal\";\r\nimport Moment from \"react-moment\";\r\nimport BreadcrumsModel from './../shared/Breadcrum/BreadcrumsModel';\r\n\r\nclass MyAppointments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isOpenConfirm: false,\r\n      questionConfirm: \"\",\r\n      idAppointment: \"\",\r\n      nameOfDonor: '',\r\n      emailOfDonor: '',\r\n      dateOfDonor: \"\",\r\n      searchText: \"\",\r\n      status: \"\",\r\n      checkboxDenied: true,\r\n      checkboxAccepted: true,\r\n      checkboxPending: true,\r\n      showAddBtn:false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getAppointment();\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n  toggleConfirm = () => {\r\n    this.setState({ isOpenConfirm: !this.state.isOpenConfirm });\r\n  };\r\n  handleSendApp = () => {\r\n    this.props.getAppointment();\r\n  };\r\n\r\n  handleStatus = async (idDonor, status) => {\r\n    this.props.updateAppointment(idDonor, status);\r\n    await this.props.getAppointment();\r\n  };\r\n  handleAnswer = async (answer) => {\r\n    if (answer === \"cancel\") {\r\n      this.setState({\r\n        isOpenConfirm: false,\r\n        questionConfirm: \"\",\r\n      });\r\n    } else if (answer === \"continue\") {\r\n      this.props.updateAppointment(this.state.idAppointment, this.state.status, this.state.nameOfDonor, this.state.emailOfDonor, '', this.props.auth.user.name.toUpperCase(), this.state.dateOfDonor.toString());\r\n      await this.props.getAppointment();\r\n    }\r\n  };\r\n\r\n  filterData = (name, email, status) => {\r\n    if (\r\n      this.state.searchText === \"\" ||\r\n      name.includes(this.state.searchText) ||\r\n      email.includes(this.state.searchText) ||\r\n      status.includes(this.state.searchText)\r\n    ) {\r\n      if (\r\n        status.toLowerCase() === \"pending\" &&\r\n        this.state.checkboxPending === true\r\n      )\r\n        return true;\r\n      if (\r\n        status.toLowerCase() === \"accepted\" &&\r\n        this.state.checkboxAccepted === true\r\n      )\r\n        return true;\r\n      if (\r\n        status.toLowerCase() === \"denied\" &&\r\n        this.state.checkboxDenied === true\r\n      )\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleAppointmentsView = async (appointments,id) => {\r\n    let ok = true\r\n    // eslint-disable-next-line\r\n    await appointments.map(({ name, date, idDonor, status }) => {\r\n      if (id === idDonor) {\r\n        if (status === 'pending' || status === 'Accepted') {\r\n          ok = false\r\n        }\r\n      }\r\n    })\r\n    if(this.state.showAddBtn !== ok)\r\n    this.setState({\r\n      showAddBtn:ok\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <div>\r\n         <BreadcrumsModel\r\n                options={[{ to: \"/\", name: \"Blood Donation\" }]}\r\n                currentLink=\"Appointments\"\r\n            />\r\n        {user && user.role === \"donor\" && (\r\n          <div className=\"row\">\r\n            <div className=\"col p-4\">\r\n          \r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <ListGroup>\r\n          <ListGroupItem active>\r\n            My Appointments\r\n            {user && user.role === \"donor\" && this.handleAppointmentsView(this.props.request.appointments,user._id) && this.state.showAddBtn === true && (\r\n              <Button\r\n                className=\"appointment-btn float-right \"\r\n                color=\"warning\"\r\n                size=\"sm\"\r\n                onClick={this.toggle}\r\n              >\r\n                Add appointment\r\n              </Button>\r\n            )}\r\n          </ListGroupItem>\r\n          {user &&\r\n            user.role === \"donor\" &&\r\n            this.props.request.appointments &&\r\n            this.props.request.appointments.map(({ name, date, idDonor, status }) => {\r\n              if (user._id === idDonor)\r\n                return (\r\n                  <ListGroupItem>\r\n                    <>\r\n                      {name} - <Moment format=\"DD/MM/YYYY\">{date}</Moment> | Status : {status}\r\n                    </>\r\n                  </ListGroupItem>\r\n                );\r\n                return null;\r\n            })}\r\n        </ListGroup>\r\n\r\n        {user && user.role === \"admin\" && (\r\n          <>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                value={this.state.searchText}\r\n                onChange={(e) => this.setState({ searchText: e.target.value })}\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxPending}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxPending: !this.state.checkboxPending,\r\n                    })\r\n                  }\r\n                  id=\"checkboxPending\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxPending\">\r\n                  Pending\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxAccepted}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxAccepted: !this.state.checkboxAccepted,\r\n                    })\r\n                  }\r\n                  id=\"checkboxAccepted\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxAccepted\">\r\n                  Accepted\r\n                </label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxDenied}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxDenied: !this.state.checkboxDenied,\r\n                    })\r\n                  }\r\n                  id=\"checkboxDenied\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxDenied\">\r\n                  Denied\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <table className=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th className=\"text-center\" scope=\"col\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.request.appointments &&\r\n                  this.props.request.appointments.map(\r\n                    (\r\n                      { _id, name, email, date, status = \"pending\", idDonor },\r\n                      index\r\n                    ) => {\r\n                      if (this.filterData(name, email, status) === true)\r\n                        return (\r\n                          <tr>\r\n                            <th scope=\"row\">{index + 1}</th>\r\n                            <td>{name}</td>\r\n                            <td>{email}</td>\r\n                            <td>\r\n                              {\" \"}\r\n                              <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n                            </td>\r\n                            <td>{status.toUpperCase()}</td>\r\n                            <td className=\"text-center\">\r\n                              <button\r\n                                title=\"Accepted\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isOpenConfirm: true,\r\n                                    questionConfirm:\r\n                                      \"Are you sure you wanna accept this appointment?\",\r\n                                    idAppointment: _id,\r\n                                    status: \"Accepted\",\r\n                                    nameOfDonor: name,\r\n                                    emailOfDonor: email,\r\n                                    dateOfDonor: date,\r\n                                  })\r\n                                }\r\n                                className=\"btn btn-success mx-2\"\r\n                              >\r\n                                Accepted\r\n                              </button>\r\n                              <button\r\n                                title=\"Denied\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isOpenConfirm: true,\r\n                                    questionConfirm:\r\n                                      \"Are you sure you wanna denie this appointment?\",\r\n                                    idAppointment: _id,\r\n                                    status: \"Denied\",\r\n                                    nameOfDonor: name,\r\n                                    emailOfDonor: email,\r\n                                    dateOfDonor: date,\r\n                                  })\r\n                                }\r\n                                className=\"btn btn-danger\"\r\n                              >\r\n                                Denied\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                        return null;\r\n                    }\r\n                  )}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n\r\n        {user && user.role === \"donor\" && (\r\n          <AppointmentModal\r\n            name={user.name}\r\n            email={user.email}\r\n            isOpen={this.state.isOpen}\r\n            toggle={this.toggle}\r\n            handleSendApp={this.handleSendApp}\r\n          />\r\n        )}\r\n        <ConfirmModal\r\n          isOpen={this.state.isOpenConfirm}\r\n          toggle={this.toggleConfirm}\r\n          question={this.state.questionConfirm}\r\n          handleAnswer={this.handleAnswer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  donor: state.donor,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  request: state.request,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getAppointment, updateAppointment })(\r\n    MyAppointments\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getQuestions, updateQuestions } from \"../../actions/mainActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ConfirmModal from \"./ConfirmModal\";\r\nimport BreadcrumsModel from './../shared/Breadcrum/BreadcrumsModel';\r\n\r\nclass Questions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isOpenConfirm: false,\r\n      questionConfirm: \"\",\r\n      idQuestion: \"\",\r\n      searchText: \"\",\r\n      status: \"\",\r\n      checkboxDenied: true,\r\n      checkboxAccepted: true,\r\n      checkboxPending: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getQuestions();\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n  toggleConfirm = () => {\r\n    this.setState({ isOpenConfirm: !this.state.isOpenConfirm });\r\n  };\r\n  handleSendApp = () => {\r\n    this.props.getQuestions();\r\n  };\r\n\r\n  handleStatus = async (idDonor, status) => {\r\n    this.props.updateQuestions(idDonor, { status });\r\n    await this.props.getQuestions();\r\n  };\r\n  handleAnswer = async (answer) => {\r\n    if (answer === \"cancel\") {\r\n      this.setState({\r\n        isOpenConfirm: false,\r\n        questionConfirm: \"\",\r\n      });\r\n    } else if (answer === \"continue\") {\r\n      this.props.updateQuestions(this.state.idQuestion, {\r\n        status: this.state.status,\r\n      });\r\n      await this.props.getQuestions();\r\n    }\r\n  };\r\n\r\n  handleResponseAnswer = async (event, id) => {\r\n    await this.props.updateQuestions(id, {\r\n      answer: event.currentTarget.textContent,\r\n    });\r\n  };\r\n\r\n  filterData = (author, email, status) => {\r\n    if (\r\n      this.state.searchText === \"\" ||\r\n      (author && author.includes(this.state.searchText)) ||\r\n      (email && email.includes(this.state.searchText)) ||\r\n      (status && status.includes(this.state.searchText))\r\n    ) {\r\n      if (\r\n        status.toLowerCase() === \"pending\" &&\r\n        this.state.checkboxPending === true\r\n      )\r\n        return true;\r\n      if (\r\n        status.toLowerCase() === \"accepted\" &&\r\n        this.state.checkboxAccepted === true\r\n      )\r\n        return true;\r\n      if (\r\n        status.toLowerCase() === \"denied\" &&\r\n        this.state.checkboxDenied === true\r\n      )\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <div>\r\n         <BreadcrumsModel\r\n                options={[{ to: \"/\", name: \"Blood Donation\" }]}\r\n                currentLink=\"Questions\"\r\n            />\r\n        {user && user.role === \"admin\" && (\r\n          <>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                value={this.state.searchText}\r\n                onChange={(e) => this.setState({ searchText: e.target.value })}\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxPending}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxPending: !this.state.checkboxPending,\r\n                    })\r\n                  }\r\n                  id=\"checkboxPending\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxPending\">\r\n                  Pending\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxAccepted}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxAccepted: !this.state.checkboxAccepted,\r\n                    })\r\n                  }\r\n                  id=\"checkboxAccepted\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxAccepted\">\r\n                  Accepted\r\n                </label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  checked={this.state.checkboxDenied}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      checkboxDenied: !this.state.checkboxDenied,\r\n                    })\r\n                  }\r\n                  id=\"checkboxDenied\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"checkboxDenied\">\r\n                  Denied\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <table className=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Author</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Question</th>\r\n                  <th scope=\"col\">Answer</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th className=\"text-center\" scope=\"col\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.main.questions &&\r\n                  this.props.main.questions.map(\r\n                    (\r\n                      {\r\n                        _id,\r\n                        author,\r\n                        email,\r\n                        question,\r\n                        answer,\r\n                        status = \"pending\",\r\n                      },\r\n                      index\r\n                    ) => {\r\n                      if (this.filterData(author, email, status) === true)\r\n                        return (\r\n                          <tr>\r\n                            <th scope=\"row\">{index + 1}</th>\r\n                            <td>{author}</td>\r\n                            <td>{email}</td>\r\n                            <td>{question}</td>\r\n                            <td\r\n                              contentEditable={true}\r\n                              onInput={(e) => {\r\n                                this.handleResponseAnswer(e, _id);\r\n                              }}\r\n                            >\r\n                              {answer}\r\n                            </td>\r\n                            <td>{status.toUpperCase()}</td>\r\n                            <td className=\"text-center\">\r\n                              <button\r\n                                title=\"Accepted\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isOpenConfirm: true,\r\n                                    questionConfirm:\r\n                                      \"Are you sure you wanna accept this question?\",\r\n                                    idQuestion: _id,\r\n                                    status: \"Accepted\",\r\n                                  })\r\n                                }\r\n                                className=\"btn btn-success mx-2\"\r\n                              >\r\n                                Accepted\r\n                              </button>\r\n\r\n                              <button\r\n                                title=\"Denied\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isOpenConfirm: true,\r\n                                    questionConfirm:\r\n                                      \"Are you sure you wanna denie this question?\",\r\n                                    idQuestion: _id,\r\n                                    status: \"Denied\",\r\n                                  })\r\n                                }\r\n                                className=\" btn btn-danger\"\r\n                              >\r\n                                Denied\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                        return null;\r\n                    }\r\n                  )}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n        <ConfirmModal\r\n          isOpen={this.state.isOpenConfirm}\r\n          toggle={this.toggleConfirm}\r\n          question={this.state.questionConfirm}\r\n          handleAnswer={this.handleAnswer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  donor: state.donor,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  main: state.main,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getQuestions, updateQuestions })(Questions)\r\n);\r\n","import React from \"react\";\r\nimport BreadcrumsModel from \"./../shared/Breadcrum/BreadcrumsModel\";\r\n\r\nexport default function MainPage() {\r\n  return (\r\n    <>\r\n      <BreadcrumsModel\r\n        options={[{ to: \"/\", name: \"Blood Donation\" }]}\r\n        currentLink=\"Dashboard\"\r\n      />\r\n      <div className=\"\">\r\n        <div className=\"jumbotron p-4 p-md-5 text-white rounded bg-dark shadow-lg p-3 mb-5 rounded\">\r\n          <div className=\"col-md-6 px-0\">\r\n            <h1 className=\"display-4 font-italic\">Blood Donation</h1>\r\n            <p className=\"lead my-3\">\r\n              WE INVITE YOU TO JOIN US, AS WE KNOW THAT YOU HAVE DONE IT UNTIL\r\n              NOW\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col-md-6 \">\r\n            <div className=\"row no-gutters border rounded  flex-md-row mb-4 shadow-lg p-3 mb-5 bg-white rounded\">\r\n              <div className=\"col p-4 d-flex flex-column position-static\">\r\n                <strong className=\"d-inline-block mb-2 text-primary\">\r\n                  World Health Organization\r\n                </strong>\r\n                <h3 className=\"mb-0\">Data and statistics</h3>\r\n                <div className=\"mb-1 text-muted\">2011</div>\r\n                <p className=\"card-text mb-auto\">\r\n                Statistics show that one donated unit of whole blood can save up to 3 lives, through separation and use of its components.\r\n                </p>\r\n                <a\r\n                  href=\"https://www.euro.who.int/en/health-topics/Health-systems/blood-safety/data-and-statistics\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"stretched-link\"\r\n                >\r\n                  Continue reading\r\n                </a>\r\n              </div>\r\n              <div className=\"col-auto d-none d-lg-block\">\r\n                <img\r\n                  width=\"200px\"\r\n                  src=\"https://ehma.org/wp-content/uploads/2017/07/World-Health-Organization-Logo-e1502197179952.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row no-gutters border rounded  flex-md-row mb-4 shadow-lg p-3 mb-5 bg-white rounded\">\r\n              <div className=\"col p-4 d-flex flex-column position-static\">\r\n                <strong className=\"d-inline-block mb-2 text-success\">\r\n                  World Health Organization\r\n                </strong>\r\n                <h3 className=\"mb-0\">Blood donation low among young people</h3>\r\n                <div className=\"mb-1 text-muted\">Jun 2014</div>\r\n                <p className=\"mb-auto\">\r\n                  Over 70% of people aged 18–24 years in the WHO European Region\r\n                  have never given blood\r\n                </p>\r\n                <a\r\n                  href=\"https://www.euro.who.int/en/health-topics/Health-systems/blood-safety/news/news/2014/06/blood-donation-low-among-young-people\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                  className=\"stretched-link\"\r\n                >\r\n                  Continue reading\r\n                </a>\r\n              </div>\r\n              <div className=\"col-auto d-none d-lg-block\">\r\n                <img\r\n                  width=\"200px\"\r\n                  src=\"https://ehma.org/wp-content/uploads/2017/07/World-Health-Organization-Logo-e1502197179952.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 blog-main\">\r\n            <h2 className=\"pb-4 mb-4 font-italic border-bottom\">\r\n              What to Do Before, During and After Your Donation\r\n            </h2>\r\n\r\n            <div className=\"blog-post my-4\">\r\n              <h2 className=\"blog-post-title \" style={{ color: \"#DC143C\" }}>\r\n                Additional tips before donating:\r\n              </h2>\r\n\r\n              <ul>\r\n                <li>\r\n                  Ask a friend to donate at the same time . You can support each\r\n                  other and do twice as much good!\r\n                </li>\r\n                <li>\r\n                  Have iron-rich foods, such as red meat, fish, poultry, beans,\r\n                  spinach, iron-fortified cereals or raisins.\r\n                </li>\r\n                <li>\r\n                  Get a good night's sleep the night before your donation, eat\r\n                  healthy foods and drink extra liquids.\r\n                </li>\r\n                <li>Keep eating iron-rich foods. </li>\r\n                <li>\r\n                  If you donate frequently, be sure to take multivitamins with\r\n                  iron to ensure you continue to replenish your iron stores\r\n                  before your next donation.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"blog-post my-4\">\r\n              <h2 className=\"blog-post-title\" style={{ color: \"#DC143C\" }}>\r\n                Additional tips for the day of your donation:\r\n              </h2>\r\n              <ul>\r\n                <li>\r\n                  Drink an extra 16 oz. of water (or other nonalcoholic drink)\r\n                  before your appointment.\r\n                </li>\r\n                <li>\r\n                  Eat a healthy meal, avoiding fatty foods like hamburgers,\r\n                  fries or ice cream.\r\n                </li>\r\n                <li>\r\n                  Wear a shirt with sleeves that you can roll up above your\r\n                  elbows.\r\n                </li>\r\n                <li>\r\n                  Let us know if you have a preferred arm or particular vein\r\n                  that has been used successfully in the past to draw blood.\r\n                </li>\r\n                <li>\r\n                  Relax, listen to music, talk to other donors or read while you\r\n                  donate.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"blog-post my-4\">\r\n              <h2 className=\"blog-post-title\" style={{ color: \"#DC143C\" }}>\r\n                Additional tips for after your donation:\r\n              </h2>\r\n              <ul>\r\n                <li>\r\n                  Keep the strip bandage on for the next several hours; to avoid\r\n                  a skin rash, clean the area around the bandage with soap and\r\n                  water.\r\n                </li>\r\n                <li>\r\n                  Don’t do any heavy lifting or vigorous exercise for the rest\r\n                  of the day.\r\n                </li>\r\n                <li>\r\n                  f the needle site starts to bleed, apply pressure and raise\r\n                  your arm straight up for 5-10 minutes or until bleeding stops.\r\n                </li>\r\n                <li>Keep eating iron-rich foods. </li>\r\n                <li>\r\n                  If you donate frequently, be sure to take multivitamins with\r\n                  iron to ensure you continue to replenish your iron stores\r\n                  before your next donation.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <aside className=\"col-md-4 blog-sidebar \">\r\n            <div className=\"p-4 mb-3 bg-light rounded shadow-lg p-3 mb-5 bg-white rounded\">\r\n              <h4 className=\"font-italic\">Give Blood</h4>\r\n              <p className=\"mb-0\">\r\n                Donating Blood Makes a Big Difference in the Lives of Others.\r\n              </p>\r\n            </div>\r\n          </aside>\r\n        </div>\r\n      </div>\r\n      <footer className=\"blog-footer\">\r\n        {/* <p>\r\n          <a href=\"#\">Back to top</a>\r\n        </p> */}\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport BreadcrumsModel from './../shared/Breadcrum/BreadcrumsModel';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser, updateUserPassword } from '../../actions/mainActions'\r\nclass Settings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: (this.props.auth.user && this.props.auth.user.name )|| '',\r\n            email: (this.props.auth.user && this.props.auth.user.email) || \"\",\r\n            phone: (this.props.auth.user && this.props.auth.user.phone) || \"\",\r\n            address: (this.props.auth.user && this.props.auth.user.address) || \"\",\r\n            currentPassword: '',\r\n            newPassword: '',\r\n            newPassword2: ''\r\n        }\r\n    }\r\n    hanldeChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSubmitDetails = async (e) => {\r\n        e.preventDefault()\r\n        await this.props.updateUser(this.props.auth.user._id, {\r\n            name: this.state.name,\r\n            phone: this.state.phone,\r\n            email: this.state.email,\r\n            address: this.state.address\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = async (e) => {\r\n        e.preventDefault()\r\n        if(this.state.newPassword === this.state.newPassword2){\r\n            await this.props.updateUserPassword(this.props.auth.user._id, {\r\n                currentPassword: this.state.currentPassword,\r\n                newPassword: this.state.newPassword,\r\n                newPassword2: this.state.newPassword2\r\n            })\r\n        }else{\r\n            alert('New Passwords are not the same! ')\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        if (this.props.auth.user && this.props.auth.user.name) {\r\n            const { user } = this.props.auth;\r\n            return (\r\n                <>\r\n                    <BreadcrumsModel\r\n                        options={[{ to: \"/\", name: \"Blood Donation\" }]}\r\n                        currentLink=\"Settings\"\r\n                    />\r\n                    <div>\r\n                        <div className=\"bootstrap snippet\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-10\"><h1>{user.name.toUpperCase()}</h1></div>\r\n                                <div className=\"col-sm-2\">Blood Donation</div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n\r\n\r\n                                    <div className=\"text-center\">\r\n                                        <img src=\"https://socialerasmus.esn.org/sites/default/files/1200-5480-blood-donation-photo1.jpg\" className=\"avatar img-circle img-thumbnail\" alt=\"avatar\" />\r\n                                        {/* <h6>Upload a different photo...</h6>\r\n                                    <input type=\"file\" className=\"text-center center-block file-upload\" /> */}\r\n                                    </div><hr></hr><br></br>\r\n\r\n                                    {/* <ul className=\"list-group\">\r\n                                        <li className=\"list-group-item text-muted\">Activity</li>\r\n                                        <li className=\"list-group-item text-left\"><span className=\"pull-left\"><strong>Timeline</strong></span> 2</li>\r\n                                    </ul> */}\r\n\r\n                                </div>\r\n                                <div className=\"col-sm-9\">\r\n                                    <div className=\"tab-content\">\r\n                                        <div className=\"tab-pane active\" id=\"home\">\r\n                                            <hr></hr>\r\n                                            <form className=\"form\" id=\"detailsForm\" onSubmit={this.handleSubmitDetails}>\r\n                                                <div className=\"form-group\">\r\n\r\n                                                    <div className=\"col-xs-6\">\r\n                                                        <label htmlFor=\"name_user\"><h4>Name</h4></label>\r\n                                                        <input required onChange={this.hanldeChange} value={this.state.name} type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" placeholder=\"Name\" title=\"enter your first name if any.\" />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"col-xs-6\">\r\n                                                        <label htmlFor=\"phone\"><h4>Phone</h4></label>\r\n                                                        <input minLength={10} required onChange={this.hanldeChange} pattern=\"[0-9]{10}\" value={this.state.phone} type=\"tel\" className=\"form-control\" name=\"phone\" id=\"phone\" placeholder=\"enter phone\" title=\"enter your phone number if any.\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n\r\n                                                    <div className=\"col-xs-6\">\r\n                                                        <label htmlFor=\"email\"><h4>Email</h4></label>\r\n                                                        <input required onChange={this.hanldeChange} value={this.state.email} type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"you@email.com\" title=\"enter your email.\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"col-xs-6\">\r\n                                                        <label htmlFor=\"address\"><h4>Address</h4></label>\r\n                                                        <input required onChange={this.hanldeChange} value={this.state.address} type=\"text\" className=\"form-control\" name=\"address\" id=\"location\" placeholder=\"Name\" title=\"enter your first name if any.\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"col-xs-12\">\r\n                                                        <br></br>\r\n                                                        <button className=\"btn btn-lg btn-success\" type=\"submit\"><i className=\"glyphicon glyphicon-ok-sign\"></i> Save</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                            <hr></hr>\r\n                                            <form className=\"form\" id=\"detailsForm2\" onSubmit={this.handlePasswordChange}>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"col-xs-6\">\r\n                                                            <label htmlFor=\"currentPassword\"><h4>Current Password</h4></label>\r\n                                                            <input required onChange={this.hanldeChange} value={this.state.currentPassword} type=\"password\" className=\"form-control\" name=\"currentPassword\" id=\"currentPassword\" placeholder=\"Current Password\" title=\"enter your password.\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"col-xs-6\">\r\n                                                            <label htmlFor=\"newPassword\"><h4>New Password</h4></label>\r\n                                                            <input required minLength={6} onChange={this.hanldeChange} value={this.state.newPassword} type=\"password\" className=\"form-control\" name=\"newPassword\" id=\"newPassword\" placeholder=\"New Password\" title=\"enter your password.\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"col-xs-6\">\r\n                                                            <label htmlFor=\"newPassword2\"><h4>Verify New Password</h4></label>\r\n                                                            <input required minLength={6} type=\"password\" className=\"form-control\" onChange={this.hanldeChange} value={this.state.newPassword2} name=\"newPassword2\" id=\"newPassword2\" placeholder=\"new password verify\" title=\"enter your password2.\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"col-xs-12\">\r\n                                                            <br></br>\r\n                                                            <button className=\"btn btn-lg btn-success\" type=\"submit\"><i className=\"glyphicon glyphicon-ok-sign\"></i> Change Password</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n\r\n        else\r\n            return null\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    donor: state.donor,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    auth: state.auth,\r\n    main: state.main,\r\n});\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, { updateUser,updateUserPassword })(Settings)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Donors from \"./Screens/Donors\";\r\nimport EditDonor from \"./Screens/EditDonoars\";\r\nimport BloodRequest from \"./components/BloodRequestModal\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/authActions\";\r\nimport NotificationsPage from \"./Screens/NotificationsPage\";\r\nimport ViewNotification from \"./Screens/ViewNotification\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport MainDashboard from \"./components/DashboardComponents/MainDashboard\";\r\nimport MedicalHistory from \"./components/DashboardComponents/MedicalHistory\";\r\nimport Main from \"./components/Main\";\r\nimport MyAppointments from \"./components/DashboardComponents/MyAppointments\";\r\nimport { getFeedbacks } from \"./actions/mainActions\";\r\nimport Questions from \"./components/DashboardComponents/Questions\";\r\nimport MainPage from './components/DashboardComponents/MainPage';\r\nimport Settings from './components/DashboardComponents/Settings';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    store.dispatch(loadUser());\r\n    store.dispatch(getFeedbacks());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route exact path=\"/donors\" component={Donors} />\r\n            <Route\r\n              exact\r\n              path=\"/donors/edit/:id\"\r\n              render={(props) => <EditDonor {...props} />}\r\n            />\r\n            <Route exact path=\"/request\" component={BloodRequest} />\r\n            <Route exact path=\"/notifications\" component={NotificationsPage} />\r\n            <Route\r\n              exact\r\n              path=\"/notifications/:id\"\r\n              component={ViewNotification}\r\n            />\r\n            <Route exact path=\"/dashboard/settings\">\r\n              <Dashboard>\r\n                <Settings />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route exact path=\"/dashboard\">\r\n              <Dashboard>\r\n                <MainPage />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route exact path=\"/dashboard/feedback\">\r\n              <Dashboard>\r\n                <MainDashboard />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route exact path=\"/dashboard/timetable\">\r\n              <Dashboard>\r\n                <MedicalHistory />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route exact path=\"/dashboard/questions\">\r\n              <Dashboard>\r\n                <Questions />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route exact path=\"/dashboard/donors\">\r\n              <Dashboard>\r\n                <Donors />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route exact path=\"/dashboard/appointment\">\r\n              <Dashboard>\r\n                <MyAppointments />\r\n              </Dashboard>\r\n            </Route>\r\n            <Route component={Main} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// eslint-disable-next-line\r\nimport $ from 'jquery';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport './assets/style/_index.scss'\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}